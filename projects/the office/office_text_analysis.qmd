---
title: "The Office - Text Analysis Project"
subtitle: "Dataset is Every Line in the Office"
date: "Oct 2, 2024"
author: "Kevin Valdivia"
format: html
toc: false # Table of contents
execute: 
  warning: false
  message: false
---

### Loading Packages

```{r}
library(tidyverse)
```

## Loading the Dataset

```{r}
office <- read.csv("the-office_lines.csv")
colnames(office)
```

### Dataset Manipulation For Graphing Main 4 Characters Overtime

```{r}
main_4_mentions <- office |> 
  mutate(Jim = ifelse(str_detect(Line, "(?i)jim"), 1, 0)) |> 
  mutate(Pam = ifelse(str_detect(Line, "(?i)pam"), 1, 0)) |> 
  mutate(Michael = ifelse(str_detect(Line, "(?i)michael"), 1, 0)) |> 
  mutate(Dwight = ifelse(str_detect(Line, "(?i)dwight"), 1, 0)) |> 
  arrange(Season, Episode_Number) |> 
  group_by(Season, Episode_Number) |> 
  summarize(Jim = sum(Jim),
            Pam = sum(Pam),
            Michael = sum(Michael),
            Dwight = sum(Dwight)) |> 
  ungroup() |> 
  mutate(season_episode_num = row_number()) |> 
  mutate(season_episode = ifelse(Episode_Number == 1, str_c("S", Season), "")) |> 
  select(Jim:season_episode) |> 
  pivot_longer(cols = Jim:Dwight,
               names_to = "character",
               values_to = "count")
main_4_mentions
```

## Graph of the main four characters overtime

```{r}
main_4_mentions |> 
  ggplot(aes(x = season_episode_num, y = count, color = character)) +
  geom_smooth(se = FALSE) +
  labs(x = "Season",
        y = "Count",
        color = "Character") +
  scale_x_continuous( breaks = main_4_mentions$season_episode_num,
                      labels = main_4_mentions$season_episode,
                      #minor_breaks = NULL      # Remove minor ticks
                      ) +
  scale_color_manual(values = c("Pam" = "#FF6F61",
                                "Jim" = "#007B7F",
                                "Dwight" = "#7D3C98",
                                "Michael" = "#DAA520")) +
  theme_minimal()
```

```{r}
corporate <- office |> 
  mutate(corporate = ifelse(str_detect(Line, "(?i)corporate"), 1, 0))

corporate |> 
  group_by(Character) |>
  summarize(corporate = sum(corporate)) |> 
  arrange(desc(corporate)) |> 
  slice_head(n = 5)
```

## Creating a plot of most "on task" Office Characters

### Data manipulation
The goal of this R chunk is to create a dataset called ontask which
```{r}
main_characters <- c("Michael", "Jim", "Pam", "Dwight", "Ryan", "Angela", 
                "Andy", "Stanley", "Phyllis", "Kelly", "Toby", 
                "Kevin", "Oscar", "Creed", "Meredith")

ontask_regular_expression <- "(?i)(Sales call|Close the deal|Client meeting|Team building|Sales quota|Dunder Mifflin|Paper company|File|Report|Workplace safety|Expense report|Business trip|Client relations|Company policy|Human resources|Submit a proposal|Meet the deadline|Job performance|Close a sale|Office supplies|Sales pitch|Productivity report|Employee evaluation|Quarterly review|Manager meeting|Sales team|Sales numbers|Work email|Conference call|Work-life balance|Overtime|Office hours|Weekly meeting|Promotion|Sales report|Job interview|Submit the paperwork|Company-wide memo|Business strategy|Client presentation|Office party|Budget meeting|New hire|Work project|Revenue target|Annual review|Management decision|Employee training|Company retreat|Work performance)"


ontask <- office |> 
  filter(Character %in% main_characters) |> 
  mutate(on_task = case_when(
    str_detect(Line, ontask_regular_expression) ~ 1,
    TRUE ~ 0)) |> 
  group_by(Character) |> 
  summarise(prop = sum(on_task)/n())
head(ontask)
```

### Creating a custom color palette (experimental)
I asked ChatGPT to make a custom color palette for the characters of the office. The colors are supposed to capture the "essence" of the character for plotting.

```{r}
palette <- c("Michael" = "#7FB3D5", "Jim" = "#8B8B8B", "Pam" = "#FF8DAA", 
             "Dwight" = "#FFD700", "Ryan" = "#28A745", "Angela" = "#5B2C6F", 
             "Andy" = "#FF6F61", "Stanley" = "#5C3A1D", "Phyllis" = "#A0522D", 
             "Kelly" = "#FF1493", "Toby" = "#4A90E2", "Kevin" = "#FFA500", 
             "Oscar" = "#1E4D2B", "Creed" = "#C0C0C0", "Meredith" = "#A50000")
```

##

```{r}
ontask |> 
  ggplot(aes(x = reorder(Character, prop), y = prop, fill = Character)) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  scale_fill_manual(values = palette) +
  theme_minimal() +
  labs(y = "Percentage",
       x = "Character",
       title = "Percentage of Work Related Lines By Character From 'The Office'")
```
