[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "tidytuesday/school_income.html",
    "href": "tidytuesday/school_income.html",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College."
  },
  {
    "objectID": "tidytuesday/school_income.html#loading-relevant-libraries",
    "href": "tidytuesday/school_income.html#loading-relevant-libraries",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData"
  },
  {
    "objectID": "tidytuesday/school_income.html#importation-of-the-data",
    "href": "tidytuesday/school_income.html#importation-of-the-data",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Importation of the data",
    "text": "Importation of the data\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\n\n\n\n\n\nDisclaimer\n\n\n\nThe documentation of the dataset was highly complicated and technical and hence I don’t understand how to interpret the datset. Instead I used the graph to learn more about how to make a interactive graph. Specifically how to select a line on a graph. There are many institutions on the graph so it is not the best example, but the code works."
  },
  {
    "objectID": "tidytuesday/school_income.html#setting-up-interactive-graph",
    "href": "tidytuesday/school_income.html#setting-up-interactive-graph",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Setting up interactive graph",
    "text": "Setting up interactive graph\n\n\n\n\n\n\nPlotly & Crosstalk::SharedData\n\n\n\nThe SharedData function hass to be used in this way for the plotly to work.\n\n\n\n# Some Data prep so that public and private categroization looks good on the graph\ncollege_admissions &lt;- college_admissions |&gt;\n  mutate(public_name = ifelse(public == TRUE, \"Public Uni\", \"Private Uni\"))\n\n# Indispensable setup for plotly\ndata_w_crosstalk &lt;- crosstalk::SharedData$new(college_admissions, ~name)"
  },
  {
    "objectID": "tidytuesday/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "href": "tidytuesday/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Interactive graph that can highlight a line when selected",
    "text": "Interactive graph that can highlight a line when selected\nFirst we need to make the ggplot look how we want it to look.\n\nplot_setup &lt;- data_w_crosstalk |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public_name,\n             text = paste0(\"School: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public_name) +\n    scale_color_manual(values = c(\"Public Uni\" = \"blue\", \"Private Uni\" = \"red\")) +  # Custom colors\n  guides(color = \"none\") + # How to not make the color and public/private appear\n  labs(x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\",\n       title = \"Plot Comparing Elite Schools and Student Income Status\")"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html",
    "title": "The Office - Text Analysis Project",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html#loading-the-dataset",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html#loading-the-dataset",
    "title": "The Office - Text Analysis Project",
    "section": "Loading the Dataset",
    "text": "Loading the Dataset\n\noffice &lt;- read.csv(\"the-office_lines.csv\")\ncolnames(office)\n\n[1] \"X\"              \"Character\"      \"Line\"           \"Season\"        \n[5] \"Episode_Number\"\n\n\n\nDataset Manipulation For Graphing Main 4 Characters Overtime\n\nmain_4_mentions &lt;- office |&gt; \n  mutate(Jim = ifelse(str_detect(Line, \"(?i)jim\"), 1, 0)) |&gt; \n  mutate(Pam = ifelse(str_detect(Line, \"(?i)pam\"), 1, 0)) |&gt; \n  mutate(Michael = ifelse(str_detect(Line, \"(?i)michael\"), 1, 0)) |&gt; \n  mutate(Dwight = ifelse(str_detect(Line, \"(?i)dwight\"), 1, 0)) |&gt; \n  arrange(Season, Episode_Number) |&gt; \n  group_by(Season, Episode_Number) |&gt; \n  summarize(Jim = sum(Jim),\n            Pam = sum(Pam),\n            Michael = sum(Michael),\n            Dwight = sum(Dwight)) |&gt; \n  ungroup() |&gt; \n  mutate(season_episode_num = row_number()) |&gt; \n  mutate(season_episode = ifelse(Episode_Number == 1, str_c(\"S\", Season), \"\")) |&gt; \n  select(Jim:season_episode) |&gt; \n  pivot_longer(cols = Jim:Dwight,\n               names_to = \"character\",\n               values_to = \"count\")\nmain_4_mentions\n\n# A tibble: 736 × 4\n   season_episode_num season_episode character count\n                &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt;\n 1                  1 \"S1\"           Jim           7\n 2                  1 \"S1\"           Pam          17\n 3                  1 \"S1\"           Michael       7\n 4                  1 \"S1\"           Dwight        8\n 5                  2 \"\"             Jim           6\n 6                  2 \"\"             Pam           4\n 7                  2 \"\"             Michael      15\n 8                  2 \"\"             Dwight       10\n 9                  3 \"\"             Jim          17\n10                  3 \"\"             Pam          10\n# ℹ 726 more rows"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "title": "The Office - Text Analysis Project",
    "section": "Graph of the main four characters overtime",
    "text": "Graph of the main four characters overtime\n\nmain_4_mentions |&gt; \n  ggplot(aes(x = season_episode_num, y = count, color = character)) +\n  geom_smooth(se = FALSE) +\n  labs(x = \"Season\",\n        y = \"Count\",\n        color = \"Character\") +\n  scale_x_continuous( breaks = main_4_mentions$season_episode_num,\n                      labels = main_4_mentions$season_episode,\n                      #minor_breaks = NULL      # Remove minor ticks\n                      ) +\n  scale_color_manual(values = c(\"Pam\" = \"#FF6F61\",\n                                \"Jim\" = \"#007B7F\",\n                                \"Dwight\" = \"#7D3C98\",\n                                \"Michael\" = \"#DAA520\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ncorporate &lt;- office |&gt; \n  mutate(corporate = ifelse(str_detect(Line, \"(?i)corporate\"), 1, 0))\n\ncorporate |&gt; \n  group_by(Character) |&gt;\n  summarize(corporate = sum(corporate)) |&gt; \n  arrange(desc(corporate)) |&gt; \n  slice_head(n = 5)\n\n# A tibble: 5 × 2\n  Character corporate\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Michael          61\n2 Dwight           17\n3 Gabe             11\n4 Pam               9\n5 Jim               8\n\n\n\nmain_characters &lt;- c(\"Michael\", \"Jim\", \"Pam\", \"Dwight\", \"Ryan\", \"Angela\", \n                \"Andy\", \"Stanley\", \"Phyllis\", \"Kelly\", \"Toby\", \n                \"Kevin\", \"Oscar\", \"Creed\", \"Meredith\")\n\nontask &lt;- office |&gt; \n  filter(Character %in% main_characters) |&gt; \n  mutate(on_task = case_when(\n    str_detect(Line, \"(?i)(Sales call|Close the deal|Client meeting|Team building|Sales quota|Dunder Mifflin|Paper company|File|Report|Workplace safety|Expense report|Business trip|Client relations|Company policy|Human resources|Submit a proposal|Meet the deadline|Job performance|Close a sale|Office supplies|Sales pitch|Productivity report|Employee evaluation|Quarterly review|Manager meeting|Sales team|Sales numbers|Work email|Conference call|Work-life balance|Overtime|Office hours|Weekly meeting|Promotion|Sales report|Job interview|Submit the paperwork|Company-wide memo|Business strategy|Client presentation|Office party|Budget meeting|New hire|Work project|Revenue target|Annual review|Management decision|Employee training|Company retreat|Work performance)\") ~ 1,\n    TRUE ~ 0)) |&gt; \n  group_by(Character) |&gt; \n  summarise(prop = sum(on_task)/n())\n\n\npallete &lt;- c(\"Pam\" = \"#FF6F61\",      # Coral\n              \"Jim\" = \"#007B7F\",      # Teal\n                                \"Dwight\" = \"#7D3C98\",   # Purple\n                                \"Michael\" = \"#DAA520\",  # Goldenrod\n                                \"Angela\" = \"#F1C40F\",   # Bright Yellow\n                                \"Stanley\" = \"#E74C3C\",   # Bright Red\n                                \"Phyllis\" = \"#3498DB\",   # Bright Blue\n                                \"Ryan\" = \"#9B59B6\",      # Lavender\n                                \"Toby\" = \"#2ECC71\",      # Bright Green\n                                \"Kelly\" = \"#E67E22\"      # Bright Orange\n)\n\nontask |&gt; \n  ggplot(aes(x = reorder(Character, prop), y = prop, color = Character)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = pallete) +\n  theme_minimal()"
  }
]