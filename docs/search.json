[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "blank.html",
    "href": "blank.html",
    "title": ":D",
    "section": "",
    "text": "About this site :D"
  },
  {
    "objectID": "blank2.html",
    "href": "blank2.html",
    "title": "Blank2",
    "section": "",
    "text": "About this site :D D:\n\n1 + 3\n\n[1] 4"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Kevin V",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Kevin V",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Spet 2012 - April 2018"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "data viz/summer_movies.html",
    "href": "data viz/summer_movies.html",
    "title": "DS002R - HW 2 - Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData\n\nadmiss &lt;- SharedData$new(college_admissions, ~name)\ngg1 &lt;- admiss |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public,\n             text = paste0(\"school: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public) +\n  labs(color = \"Public School\",\n       x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\")\n\ngg2 &lt;- ggplotly(gg1, tooltip = \"text\")\nplotly::highlight(gg2, on = \"plotly_click\")"
  },
  {
    "objectID": "data viz/summer_movies.html#analyze-the-data",
    "href": "data viz/summer_movies.html#analyze-the-data",
    "title": "DS002R - HW 2 - Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData\n\nadmiss &lt;- SharedData$new(college_admissions, ~name)\ngg1 &lt;- admiss |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public,\n             text = paste0(\"school: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public) +\n  labs(color = \"Public School\",\n       x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\")\n\ngg2 &lt;- ggplotly(gg1, tooltip = \"text\")\nplotly::highlight(gg2, on = \"plotly_click\")"
  },
  {
    "objectID": "TBD_Project.html",
    "href": "TBD_Project.html",
    "title": ":D",
    "section": "",
    "text": "About this site :D"
  },
  {
    "objectID": "data viz/school_income.html",
    "href": "data viz/school_income.html",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "",
    "text": "Heavily influenced by Professor Jo Hardin at Pomona College"
  },
  {
    "objectID": "data viz/school_income.html#analyze-the-data",
    "href": "data viz/school_income.html#analyze-the-data",
    "title": "DS002R - HW 2 - Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData\n\nadmiss &lt;- SharedData$new(college_admissions, ~name)\ngg1 &lt;- admiss |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public,\n             text = paste0(\"school: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public) +\n  labs(color = \"Public School\",\n       x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\")\n\ngg2 &lt;- ggplotly(gg1, tooltip = \"text\")\nplotly::highlight(gg2, on = \"plotly_click\")"
  },
  {
    "objectID": "data viz/Shakespeare.html",
    "href": "data viz/Shakespeare.html",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "library(tidyverse)\nlibrary(scales)\nlibrary(tidytext)\nlibrary(devtools)\nlibrary(ggwordcloud)\nlibrary(png)\nlibrary(svglite)\n\n\nhamlet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/hamlet.csv')\nmacbeth &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/macbeth.csv')\nromeo_juliet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/romeo_juliet.csv')\n\n\nromeo_juliet &lt;- romeo_juliet |&gt;  \n  filter(character %in% c(\"Romeo\",\"Juliet\")) \n\n\n# Create a custom list of words to exclude\ncustom_stop_words &lt;- c(\"thou\", \"thy\", \"thee\", \"thine\", \"art\", \"hast\", \"dost\", \"ere\", \"o\",\"hath\")\n\n\nword_counts &lt;- romeo_juliet |&gt; \n  unnest_tokens(word, dialogue) |&gt; \n  anti_join(stop_words) |&gt;   # Remove common stop words\n  filter(!str_detect(word, \"^[0-9]+$\")) |&gt;   # Remove numbers\n  filter(!word %in% custom_stop_words) |&gt;   # Remove custom words\n  mutate(word = stringr::str_replace(word, \"'s\", \"\")) |&gt; \n  count(character, word, sort = TRUE)\n\nword_counts\n\n# A tibble: 1,941 × 3\n   character word       n\n   &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n 1 Romeo     love      52\n 2 Juliet    romeo     41\n 3 Juliet    love      35\n 4 Juliet    night     30\n 5 Romeo     death     22\n 6 Juliet    nurse     20\n 7 Romeo     juliet    17\n 8 Juliet    sweet     16\n 9 Romeo     fair      15\n10 Romeo     night     15\n# ℹ 1,931 more rows\n\n\n\nsysfonts::font_add_google(\"MedievalSharp\", \"MedievalSharp\")\nshowtext::showtext_auto()\n\nmy_font &lt;- \"MedievalSharp\"\n\n\njuliet &lt;- word_counts |&gt; \n  filter(character == \"Juliet\")\n\nromeo &lt;- word_counts |&gt; \n  filter(character == \"Romeo\")\n\n\n\n\nromeo |&gt; \n  ggplot(aes(label = word, size = n, color = n)) +\n  # ggwordcloud::geom_text_wordcloud(rm_outside = TURE, shape = \"cardioid\")\n  ggwordcloud::geom_text_wordcloud_area(\n    mask = png::readPNG(\"media/romeo.png\"),\n    rm_outside = TRUE) +\n  scale_size_area(max_size = 20) +\n  theme_minimal() +\n  scale_color_gradient(low = \"#1c63d6\", high = \"#5006bf\")\n\n\n\n\n\n\n\n\n\n\n\n\njuliet |&gt; \n  ggplot(aes(label = word, size = n, color = n)) +\n  # ggwordcloud::geom_text_wordcloud(rm_outside = TURE, shape = \"cardioid\")\n  ggwordcloud::geom_text_wordcloud_area(\n    mask = png::readPNG(\"media/juliet.png\"),\n    rm_outside = TRUE) +\n  scale_size_area(max_size = 20) +\n  theme_minimal() +\n  scale_color_gradient(low = \"#c41cd6\", high = \"#5006bf\")"
  },
  {
    "objectID": "data viz/Shakespeare.html#quarto",
    "href": "data viz/Shakespeare.html#quarto",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "library(tidyverse)\nlibrary(scales)\nlibrary(tidytext)\nlibrary(devtools)\nlibrary(ggwordcloud)\nlibrary(png)\nlibrary(svglite)\n\n\nhamlet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/hamlet.csv')\nmacbeth &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/macbeth.csv')\nromeo_juliet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/romeo_juliet.csv')\n\n\nromeo_juliet &lt;- romeo_juliet |&gt;  \n  filter(character %in% c(\"Romeo\",\"Juliet\")) \n\n\n# Create a custom list of words to exclude\ncustom_stop_words &lt;- c(\"thou\", \"thy\", \"thee\", \"thine\", \"art\", \"hast\", \"dost\", \"ere\", \"o\",\"hath\")\n\n\nword_counts &lt;- romeo_juliet |&gt; \n  unnest_tokens(word, dialogue) |&gt; \n  anti_join(stop_words) |&gt;   # Remove common stop words\n  filter(!str_detect(word, \"^[0-9]+$\")) |&gt;   # Remove numbers\n  filter(!word %in% custom_stop_words) |&gt;   # Remove custom words\n  mutate(word = stringr::str_replace(word, \"'s\", \"\")) |&gt; \n  count(character, word, sort = TRUE)\n\nword_counts\n\n# A tibble: 1,941 × 3\n   character word       n\n   &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n 1 Romeo     love      52\n 2 Juliet    romeo     41\n 3 Juliet    love      35\n 4 Juliet    night     30\n 5 Romeo     death     22\n 6 Juliet    nurse     20\n 7 Romeo     juliet    17\n 8 Juliet    sweet     16\n 9 Romeo     fair      15\n10 Romeo     night     15\n# ℹ 1,931 more rows\n\n\n\nsysfonts::font_add_google(\"MedievalSharp\", \"MedievalSharp\")\nshowtext::showtext_auto()\n\nmy_font &lt;- \"MedievalSharp\"\n\n\njuliet &lt;- word_counts |&gt; \n  filter(character == \"Juliet\")\n\nromeo &lt;- word_counts |&gt; \n  filter(character == \"Romeo\")\n\n\n\n\nromeo |&gt; \n  ggplot(aes(label = word, size = n, color = n)) +\n  # ggwordcloud::geom_text_wordcloud(rm_outside = TURE, shape = \"cardioid\")\n  ggwordcloud::geom_text_wordcloud_area(\n    mask = png::readPNG(\"media/romeo.png\"),\n    rm_outside = TRUE) +\n  scale_size_area(max_size = 20) +\n  theme_minimal() +\n  scale_color_gradient(low = \"#1c63d6\", high = \"#5006bf\")\n\n\n\n\n\n\n\n\n\n\n\n\njuliet |&gt; \n  ggplot(aes(label = word, size = n, color = n)) +\n  # ggwordcloud::geom_text_wordcloud(rm_outside = TURE, shape = \"cardioid\")\n  ggwordcloud::geom_text_wordcloud_area(\n    mask = png::readPNG(\"media/juliet.png\"),\n    rm_outside = TRUE) +\n  scale_size_area(max_size = 20) +\n  theme_minimal() +\n  scale_color_gradient(low = \"#c41cd6\", high = \"#5006bf\")"
  },
  {
    "objectID": "data viz/school_income.html#loading-relevant-libraries",
    "href": "data viz/school_income.html#loading-relevant-libraries",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData"
  },
  {
    "objectID": "data viz/school_income.html#importation-of-the-data",
    "href": "data viz/school_income.html#importation-of-the-data",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Importation of the data",
    "text": "Importation of the data\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\n\n\n\n\n\nDisclaimer\n\n\n\nThe documentation of the dataset was highly complicated and technical and hence I don’t understand how to interpret the datset. Instead I used the graph to learn more about how to make a interactive graph. Specifically how to select a line on a graph. There are many institutions on the graph so it is not the best example, but the code works."
  },
  {
    "objectID": "data viz/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "href": "data viz/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Interactive graph that can highlight a line when selected",
    "text": "Interactive graph that can highlight a line when selected\nFirst we need to make the ggplot look how we want it to look.\n\nplot_setup &lt;- data_w_crosstalk |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public_name,\n             text = paste0(\"School: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public_name) +\n    scale_color_manual(values = c(\"Public Uni\" = \"blue\", \"Private Uni\" = \"red\")) +  # Custom colors\n  guides(color = \"none\") + # How to not make the color and public/private appear\n  labs(x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\",\n       title = \"Plot Comparing Elite Schools and Student Income Status\")"
  },
  {
    "objectID": "data viz/school_income.html#what-is-this-data",
    "href": "data viz/school_income.html#what-is-this-data",
    "title": "TidyTuesday Data Vizualization About Elite Schools",
    "section": "What is this data?",
    "text": "What is this data?\nThings to write"
  },
  {
    "objectID": "data viz/school_income.html#setting-up-interactive-graph",
    "href": "data viz/school_income.html#setting-up-interactive-graph",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Setting up interactive graph",
    "text": "Setting up interactive graph\n\n\n\n\n\n\nPlotly & Crosstalk::SharedData\n\n\n\nThe SharedData function hass to be used in this way for the plotly to work.\n\n\n\n# Some Data prep so that public and private categroization looks good on the graph\ncollege_admissions &lt;- college_admissions |&gt;\n  mutate(public_name = ifelse(public == TRUE, \"Public Uni\", \"Private Uni\"))\n\n# Indispensable setup for plotly\ndata_w_crosstalk &lt;- crosstalk::SharedData$new(college_admissions, ~name)"
  },
  {
    "objectID": "data viz/shakespeare_words.html",
    "href": "data viz/shakespeare_words.html",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "Heavily influenced by @hardin47 Professor Jo Hardin at Pomona College and @deepdk"
  },
  {
    "objectID": "data viz/shakespeare_words.html#loading-relevant-libraries",
    "href": "data viz/shakespeare_words.html#loading-relevant-libraries",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(tidytext)\nlibrary(devtools)\nlibrary(ggwordcloud)\nlibrary(png)\nlibrary(svglite)\nlibrary(showtext)\nlibrary(sysfonts)"
  },
  {
    "objectID": "data viz/shakespeare_words.html#importation-of-the-data",
    "href": "data viz/shakespeare_words.html#importation-of-the-data",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Importation of the data",
    "text": "Importation of the data\n\nromeo_juliet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/romeo_juliet.csv')\n\n\nData Wrangling\nFilter the data-set for only the characters Romeo and Juliet.\n\nromeo_juliet &lt;- romeo_juliet |&gt;  \n  filter(character %in% c(\"Romeo\",\"Juliet\")) \n\nMaking a list of the words that we are not interested in.\n\n# Create a custom list of words to exclude\ncustom_stop_words &lt;- c(\"thou\", \"thy\", \"thee\", \"thine\", \"art\", \"hast\", \"dost\", \"ere\", \"o\",\"hath\")\n\nMake a simple data set that has a column of the character, the word spoke, and the number of times it was spoken.\n\nword_counts &lt;- romeo_juliet |&gt; \n  unnest_tokens(word, dialogue) |&gt; \n  anti_join(stop_words) |&gt;   # Remove common stop words\n  filter(!str_detect(word, \"^[0-9]+$\")) |&gt;   # Remove numbers\n  filter(!word %in% custom_stop_words) |&gt;   # Remove custom words\n  mutate(word = stringr::str_replace(word, \"'s\", \"\")) |&gt; \n  count(character, word, sort = TRUE)\n\nword_counts\n\n# A tibble: 1,941 × 3\n   character word       n\n   &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n 1 Romeo     love      52\n 2 Juliet    romeo     41\n 3 Juliet    love      35\n 4 Juliet    night     30\n 5 Romeo     death     22\n 6 Juliet    nurse     20\n 7 Romeo     juliet    17\n 8 Juliet    sweet     16\n 9 Romeo     fair      15\n10 Romeo     night     15\n# ℹ 1,931 more rows\n\n\nCreating a dataset for each character\n\njuliet &lt;- word_counts |&gt; \n  filter(character == \"Juliet\")\n\nromeo &lt;- word_counts |&gt; \n  filter(character == \"Romeo\")\n\n\n\nAttempt At Importing Fonts\nImporting a custom font (has not been able to work yet)\n\nsysfonts::font_add_google(\"MedievalSharp\", \"MedievalSharp\")\nshowtext::showtext_auto()\n\nmy_font &lt;- \"MedievalSharp\""
  }
]