[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "I’m Kevin, an International Relations major at Pomona College, graduating in May 2026, with a focus on Latin America. Before college, I never imagined myself getting into data science or programming, but after taking a Political Statistics class in R, I discovered my passion for it. Now, I love working with R and am excited to continue developing my skills in Python. I am now interested in pursuing a career in data science.\nOn this site I keep a list of some of my projects."
  },
  {
    "objectID": "tidytuesday/school_income.html",
    "href": "tidytuesday/school_income.html",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College."
  },
  {
    "objectID": "tidytuesday/school_income.html#loading-relevant-libraries",
    "href": "tidytuesday/school_income.html#loading-relevant-libraries",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)\nlibrary(plotly)\nlibrary(crosstalk) # For SharedData"
  },
  {
    "objectID": "tidytuesday/school_income.html#importation-of-the-data",
    "href": "tidytuesday/school_income.html#importation-of-the-data",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Importation of the data",
    "text": "Importation of the data\n\ncollege_admissions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')\n\n\n\n\n\n\n\nDisclaimer\n\n\n\nThe documentation of the dataset was highly complicated and technical and hence I don’t understand how to interpret the datset. Instead I used the graph to learn more about how to make a interactive graph. Specifically how to select a line on a graph. There are many institutions on the graph so it is not the best example, but the code works."
  },
  {
    "objectID": "tidytuesday/school_income.html#setting-up-interactive-graph",
    "href": "tidytuesday/school_income.html#setting-up-interactive-graph",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Setting up interactive graph",
    "text": "Setting up interactive graph\n\n\n\n\n\n\nPlotly & Crosstalk::SharedData\n\n\n\nThe SharedData function hass to be used in this way for the plotly to work.\n\n\n\n# Some Data prep so that public and private categroization looks good on the graph\ncollege_admissions &lt;- college_admissions |&gt;\n  mutate(public_name = ifelse(public == TRUE, \"Public Uni\", \"Private Uni\"))\n\n# Indispensable setup for plotly\ndata_w_crosstalk &lt;- crosstalk::SharedData$new(college_admissions, ~name)"
  },
  {
    "objectID": "tidytuesday/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "href": "tidytuesday/school_income.html#interactive-graph-that-can-highlight-a-line-when-selected",
    "title": "Interactive Data Vizualization (select to highlight)",
    "section": "Interactive graph that can highlight a line when selected",
    "text": "Interactive graph that can highlight a line when selected\nFirst we need to make the ggplot look how we want it to look.\n\nplot_setup &lt;- data_w_crosstalk |&gt; \n  ggplot(aes(x = par_income_bin, y = attend, color = public_name,\n             text = paste0(\"School: \", name))) +\n  geom_point() +\n  geom_line() +\n  facet_grid(~ public_name) +\n    scale_color_manual(values = c(\"Public Uni\" = \"blue\", \"Private Uni\" = \"red\")) +  # Custom colors\n  guides(color = \"none\") + # How to not make the color and public/private appear\n  labs(x = \"Parental Income Bin\",\n       y = \"Something about % Attendence\",\n       title = \"Plot Comparing Elite Schools and Student Income Status\")"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html",
    "title": "The Office - Text Analysis Project",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html#loading-the-dataset",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html#loading-the-dataset",
    "title": "The Office - Text Analysis Project",
    "section": "Loading the Dataset",
    "text": "Loading the Dataset\n\noffice &lt;- read.csv(\"the-office_lines.csv\")\ncolnames(office)\n\n[1] \"X\"              \"Character\"      \"Line\"           \"Season\"        \n[5] \"Episode_Number\"\n\n\n\nDataset Manipulation For Graphing Main 4 Characters Overtime\n\nmain_4_mentions &lt;- office |&gt; \n  mutate(Jim = ifelse(str_detect(Line, \"(?i)jim\"), 1, 0)) |&gt; \n  mutate(Pam = ifelse(str_detect(Line, \"(?i)pam\"), 1, 0)) |&gt; \n  mutate(Michael = ifelse(str_detect(Line, \"(?i)michael\"), 1, 0)) |&gt; \n  mutate(Dwight = ifelse(str_detect(Line, \"(?i)dwight\"), 1, 0)) |&gt; \n  arrange(Season, Episode_Number) |&gt; \n  group_by(Season, Episode_Number) |&gt; \n  summarize(Jim = sum(Jim),\n            Pam = sum(Pam),\n            Michael = sum(Michael),\n            Dwight = sum(Dwight)) |&gt; \n  ungroup() |&gt; \n  mutate(season_episode_num = row_number()) |&gt; \n  mutate(season_episode = ifelse(Episode_Number == 1, str_c(\"S\", Season), \"\")) |&gt; \n  select(Jim:season_episode) |&gt; \n  pivot_longer(cols = Jim:Dwight,\n               names_to = \"character\",\n               values_to = \"count\")\nmain_4_mentions\n\n# A tibble: 736 × 4\n   season_episode_num season_episode character count\n                &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt;\n 1                  1 \"S1\"           Jim           7\n 2                  1 \"S1\"           Pam          17\n 3                  1 \"S1\"           Michael       7\n 4                  1 \"S1\"           Dwight        8\n 5                  2 \"\"             Jim           6\n 6                  2 \"\"             Pam           4\n 7                  2 \"\"             Michael      15\n 8                  2 \"\"             Dwight       10\n 9                  3 \"\"             Jim          17\n10                  3 \"\"             Pam          10\n# ℹ 726 more rows"
  },
  {
    "objectID": "projects/p2_text_anlaysis/p2_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "href": "projects/p2_text_anlaysis/p2_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "title": "The Office - Text Analysis Project",
    "section": "Graph of the main four characters overtime",
    "text": "Graph of the main four characters overtime\n\nmain_4_mentions |&gt; \n  ggplot(aes(x = season_episode_num, y = count, color = character)) +\n  geom_smooth(se = FALSE) +\n  labs(x = \"Season\",\n        y = \"Count\",\n        color = \"Character\") +\n  scale_x_continuous( breaks = main_4_mentions$season_episode_num,\n                      labels = main_4_mentions$season_episode,\n                      #minor_breaks = NULL      # Remove minor ticks\n                      ) +\n  scale_color_manual(values = c(\"Pam\" = \"#FF6F61\",\n                                \"Jim\" = \"#007B7F\",\n                                \"Dwight\" = \"#7D3C98\",\n                                \"Michael\" = \"#DAA520\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ncorporate &lt;- office |&gt; \n  mutate(corporate = ifelse(str_detect(Line, \"(?i)corporate\"), 1, 0))\n\ncorporate |&gt; \n  group_by(Character) |&gt;\n  summarize(corporate = sum(corporate)) |&gt; \n  arrange(desc(corporate)) |&gt; \n  slice_head(n = 5)\n\n# A tibble: 5 × 2\n  Character corporate\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Michael          61\n2 Dwight           17\n3 Gabe             11\n4 Pam               9\n5 Jim               8\n\n\n\nmain_characters &lt;- c(\"Michael\", \"Jim\", \"Pam\", \"Dwight\", \"Ryan\", \"Angela\", \n                \"Andy\", \"Stanley\", \"Phyllis\", \"Kelly\", \"Toby\", \n                \"Kevin\", \"Oscar\", \"Creed\", \"Meredith\")\n\nontask &lt;- office |&gt; \n  filter(Character %in% main_characters) |&gt; \n  mutate(on_task = case_when(\n    str_detect(Line, \"(?i)(Sales call|Close the deal|Client meeting|Team building|Sales quota|Dunder Mifflin|Paper company|File|Report|Workplace safety|Expense report|Business trip|Client relations|Company policy|Human resources|Submit a proposal|Meet the deadline|Job performance|Close a sale|Office supplies|Sales pitch|Productivity report|Employee evaluation|Quarterly review|Manager meeting|Sales team|Sales numbers|Work email|Conference call|Work-life balance|Overtime|Office hours|Weekly meeting|Promotion|Sales report|Job interview|Submit the paperwork|Company-wide memo|Business strategy|Client presentation|Office party|Budget meeting|New hire|Work project|Revenue target|Annual review|Management decision|Employee training|Company retreat|Work performance)\") ~ 1,\n    TRUE ~ 0)) |&gt; \n  group_by(Character) |&gt; \n  summarise(prop = sum(on_task)/n())\n\n\npallete &lt;- c(\"Pam\" = \"#FF6F61\",      # Coral\n              \"Jim\" = \"#007B7F\",      # Teal\n                                \"Dwight\" = \"#7D3C98\",   # Purple\n                                \"Michael\" = \"#DAA520\",  # Goldenrod\n                                \"Angela\" = \"#F1C40F\",   # Bright Yellow\n                                \"Stanley\" = \"#E74C3C\",   # Bright Red\n                                \"Phyllis\" = \"#3498DB\",   # Bright Blue\n                                \"Ryan\" = \"#9B59B6\",      # Lavender\n                                \"Toby\" = \"#2ECC71\",      # Bright Green\n                                \"Kelly\" = \"#E67E22\"      # Bright Orange\n)\n\nontask |&gt; \n  ggplot(aes(x = reorder(Character, prop), y = prop, color = Character)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = pallete) +\n  theme_minimal()"
  },
  {
    "objectID": "projects/p2_text_anlaysis/office_text_analysis.html",
    "href": "projects/p2_text_anlaysis/office_text_analysis.html",
    "title": "The Office - Text Analysis Project",
    "section": "",
    "text": "library(tidyverse)"
  },
  {
    "objectID": "projects/p2_text_anlaysis/office_text_analysis.html#loading-the-dataset",
    "href": "projects/p2_text_anlaysis/office_text_analysis.html#loading-the-dataset",
    "title": "The Office - Text Analysis Project",
    "section": "Loading the Dataset",
    "text": "Loading the Dataset\n\noffice &lt;- read.csv(\"the-office_lines.csv\")\ncolnames(office)\n\n[1] \"X\"              \"Character\"      \"Line\"           \"Season\"        \n[5] \"Episode_Number\"\n\n\n\nDataset Manipulation For Graphing Main 4 Characters Overtime\n\nmain_4_mentions &lt;- office |&gt; \n  mutate(Jim = ifelse(str_detect(Line, \"(?i)jim\"), 1, 0)) |&gt; \n  mutate(Pam = ifelse(str_detect(Line, \"(?i)pam\"), 1, 0)) |&gt; \n  mutate(Michael = ifelse(str_detect(Line, \"(?i)michael\"), 1, 0)) |&gt; \n  mutate(Dwight = ifelse(str_detect(Line, \"(?i)dwight\"), 1, 0)) |&gt; \n  arrange(Season, Episode_Number) |&gt; \n  group_by(Season, Episode_Number) |&gt; \n  summarize(Jim = sum(Jim),\n            Pam = sum(Pam),\n            Michael = sum(Michael),\n            Dwight = sum(Dwight)) |&gt; \n  ungroup() |&gt; \n  mutate(season_episode_num = row_number()) |&gt; \n  mutate(season_episode = ifelse(Episode_Number == 1, str_c(\"S\", Season), \"\")) |&gt; \n  select(Jim:season_episode) |&gt; \n  pivot_longer(cols = Jim:Dwight,\n               names_to = \"character\",\n               values_to = \"count\")\nmain_4_mentions\n\n# A tibble: 736 × 4\n   season_episode_num season_episode character count\n                &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt;\n 1                  1 \"S1\"           Jim           7\n 2                  1 \"S1\"           Pam          17\n 3                  1 \"S1\"           Michael       7\n 4                  1 \"S1\"           Dwight        8\n 5                  2 \"\"             Jim           6\n 6                  2 \"\"             Pam           4\n 7                  2 \"\"             Michael      15\n 8                  2 \"\"             Dwight       10\n 9                  3 \"\"             Jim          17\n10                  3 \"\"             Pam          10\n# ℹ 726 more rows"
  },
  {
    "objectID": "projects/p2_text_anlaysis/office_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "href": "projects/p2_text_anlaysis/office_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "title": "The Office - Text Analysis Project",
    "section": "Graph of the main four characters overtime",
    "text": "Graph of the main four characters overtime\n\nmain_4_mentions |&gt; \n  ggplot(aes(x = season_episode_num, y = count, color = character)) +\n  geom_smooth(se = FALSE) +\n  labs(x = \"Season\",\n        y = \"Count\",\n        color = \"Character\") +\n  scale_x_continuous( breaks = main_4_mentions$season_episode_num,\n                      labels = main_4_mentions$season_episode,\n                      #minor_breaks = NULL      # Remove minor ticks\n                      ) +\n  scale_color_manual(values = c(\"Pam\" = \"#FF6F61\",\n                                \"Jim\" = \"#007B7F\",\n                                \"Dwight\" = \"#7D3C98\",\n                                \"Michael\" = \"#DAA520\")) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\ncorporate &lt;- office |&gt; \n  mutate(corporate = ifelse(str_detect(Line, \"(?i)corporate\"), 1, 0))\n\ncorporate |&gt; \n  group_by(Character) |&gt;\n  summarize(corporate = sum(corporate)) |&gt; \n  arrange(desc(corporate)) |&gt; \n  slice_head(n = 5)\n\n# A tibble: 5 × 2\n  Character corporate\n  &lt;chr&gt;         &lt;dbl&gt;\n1 Michael          61\n2 Dwight           17\n3 Gabe             11\n4 Pam               9\n5 Jim               8\n\n\n\nmain_characters &lt;- c(\"Michael\", \"Jim\", \"Pam\", \"Dwight\", \"Ryan\", \"Angela\", \n                \"Andy\", \"Stanley\", \"Phyllis\", \"Kelly\", \"Toby\", \n                \"Kevin\", \"Oscar\", \"Creed\", \"Meredith\")\n\nontask &lt;- office |&gt; \n  filter(Character %in% main_characters) |&gt; \n  mutate(on_task = case_when(\n    str_detect(Line, \"(?i)(Sales call|Close the deal|Client meeting|Team building|Sales quota|Dunder Mifflin|Paper company|File|Report|Workplace safety|Expense report|Business trip|Client relations|Company policy|Human resources|Submit a proposal|Meet the deadline|Job performance|Close a sale|Office supplies|Sales pitch|Productivity report|Employee evaluation|Quarterly review|Manager meeting|Sales team|Sales numbers|Work email|Conference call|Work-life balance|Overtime|Office hours|Weekly meeting|Promotion|Sales report|Job interview|Submit the paperwork|Company-wide memo|Business strategy|Client presentation|Office party|Budget meeting|New hire|Work project|Revenue target|Annual review|Management decision|Employee training|Company retreat|Work performance)\") ~ 1,\n    TRUE ~ 0)) |&gt; \n  group_by(Character) |&gt; \n  summarise(prop = sum(on_task)/n())\n\n\npalette &lt;- c(\"Michael\" = \"#7FB3D5\", \"Jim\" = \"#8B8B8B\", \"Pam\" = \"#FF8DAA\", \n             \"Dwight\" = \"#FFD700\", \"Ryan\" = \"#28A745\", \"Angela\" = \"#5B2C6F\", \n             \"Andy\" = \"#FF6F61\", \"Stanley\" = \"#5C3A1D\", \"Phyllis\" = \"#A0522D\", \n             \"Kelly\" = \"#FF1493\", \"Toby\" = \"#4A90E2\", \"Kevin\" = \"#FFA500\", \n             \"Oscar\" = \"#1E4D2B\", \"Creed\" = \"#C0C0C0\", \"Meredith\" = \"#A50000\")\n\n\n\nontask |&gt; \n  ggplot(aes(x = reorder(Character, prop), y = prop, fill = Character)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_manual(values = palette) +\n  theme_minimal() +\n  labs(y = \"Percentage\",\n       x = \"Character\",\n       title = \"Percentage of Work Related Lines By Character From 'The Office'\")"
  },
  {
    "objectID": "practice/ggplot_practice.html",
    "href": "practice/ggplot_practice.html",
    "title": "ggplot Practice For Review",
    "section": "",
    "text": "Some ggplot examples based on plots submitted as HW. Directed by Professor Jo Hardin"
  },
  {
    "objectID": "practice/ggplot_practice.html#putting-a-label-next-to-a-specific-data-point",
    "href": "practice/ggplot_practice.html#putting-a-label-next-to-a-specific-data-point",
    "title": "ggplot Practice For Review",
    "section": "Putting a label next to a specific data point",
    "text": "Putting a label next to a specific data point\n\nggplot(midwest, aes(x = percollege, y = percbelowpoverty)) +\n  geom_point(aes(color = state)) + #, shape = state)) +\n  geom_text(aes(label = ifelse((percollege &gt;= 30) & (percbelowpoverty &gt;= 20), county, \"\")), vjust = -1, hjust = 0.5, color = \"red\") +\n  labs(x = \"Percentage of College Grads\", \n       y = \"Percentage below the Poverty Line\",        \n       title = \"Counties with College Grads and Below the Poverty Line\",\n       subtitle = \"% of college graduate to % below the poverty line in midwestern counties\",\n       color = \"State\",\n       shape = \"State\"\n       )"
  },
  {
    "objectID": "practice/ggplot_practice.html#plot-with-facet-wrap-geom_smooth",
    "href": "practice/ggplot_practice.html#plot-with-facet-wrap-geom_smooth",
    "title": "ggplot Practice For Review",
    "section": "Plot with facet wrap & geom_smooth",
    "text": "Plot with facet wrap & geom_smooth\n\n\n\n\n\n\nNote\n\n\n\nse = FALSE removes the confidence bands around the line. These bands show the uncertainty around the smooth curve. We’ll discuss uncertainty around estimates later in the course and bring these bands back then.\n\n\n\nggplot(midwest, aes(x = percollege, y = percbelowpoverty, \n           color = state, shape = state)) +\n  geom_point() +\n  geom_smooth(se = FALSE) +\n  facet_wrap(~ state) +\n  labs(x = \"Percentage of College Graduates\",\n       y = \"Percentage Below the Poverty Line\",\n       title = \"Counties with College Grads and Below the Poverty Line\",\n       subtitle = \"% of college graduate to % below the poverty line in midwestern counties\",\n       color = \"State\",\n       shape = \"State\")"
  },
  {
    "objectID": "practice/ggplot_practice.html#creating-a-box-plot---changing-the-name-of-the-values---adding-a-label-to-a-datapoint",
    "href": "practice/ggplot_practice.html#creating-a-box-plot---changing-the-name-of-the-values---adding-a-label-to-a-datapoint",
    "title": "ggplot Practice For Review",
    "section": "Creating a box plot - Changing the name of the values - Adding a label to a datapoint",
    "text": "Creating a box plot - Changing the name of the values - Adding a label to a datapoint\n\nggplot(midwest, aes(x = ifelse(state == \"IL\", \"Illinois\", \n                        ifelse(state == \"IN\", \"Indianapolis\", \n                        ifelse(state == \"MI\", \"Minesota\", \n                        ifelse(state == \"OH\", \"Ohio\", \"Wisconsin\")))), \n                    y = area)) +\n  geom_boxplot(aes(fill = state), show.legend = FALSE) + \n  geom_text(aes(label = ifelse((area &gt; 0.09) & (state == \"MI\"), county, \"\")), \n            color = \"darkgreen\",\n            vjust = 1, hjust = -0.1) +\n  labs(x = \"State\",\n       y = \"County Area\",\n       title = \"Box Plot's of Midwestern Counties Land Area\")"
  },
  {
    "objectID": "practice/ggplot_practice.html#proportion-bar-graph-with-parameter-position-fill",
    "href": "practice/ggplot_practice.html#proportion-bar-graph-with-parameter-position-fill",
    "title": "ggplot Practice For Review",
    "section": "Proportion bar graph with parameter: position = “fill”",
    "text": "Proportion bar graph with parameter: position = “fill”\n\n\n\n\n\n\nNote\n\n\n\nThe fill must be a categorical variable.\n\n\n\nmidwest &lt;- midwest |&gt;\n  mutate(metro = if_else(inmetro == 1, \"Yes\", \"No\"))\n\n\nggplot(midwest, aes(x = state, fill = metro)) +\n  geom_bar(position = \"fill\") +\n  labs(x = \"State\",\n       y = \"Proportion\",\n       fill = \"Metro\",\n       title = \"Proportion of Counties that are Metro Areas by State\") +\n  scale_fill_manual(values = c(\"Yes\" = \"darkblue\", \"No\" = \"darkred\"))"
  },
  {
    "objectID": "practice/ggplot_practice.html#geom_point-fact_wrap-and-alpha-parameter",
    "href": "practice/ggplot_practice.html#geom_point-fact_wrap-and-alpha-parameter",
    "title": "ggplot Practice For Review",
    "section": "geom_point, fact_wrap, and alpha parameter",
    "text": "geom_point, fact_wrap, and alpha parameter\n::: callout-tip ## Hint - The ggplot2 reference for themes will be helpful in determining the theme. - The size of the points is 2. - The transparency (alpha) of the points is 0.5. - You can put line breaks in labels with \\n. :::\n\nggplot(midwest, aes(percollege, percbelowpoverty, color = percwhite)) +\n  geom_point(size = 2, alpha = 0.5) +\n  facet_wrap(~ state) +\n  theme_minimal() +\n  labs(x = \"% college educated\",\n       y = \"% below poverty line\",\n       title = \"College Education and Population Under Poverty Line \",\n       subtitle = \"For Counties in the Midwest by States\",\n       color = \"% white\")"
  },
  {
    "objectID": "tidytuesday/chess_matches.html",
    "href": "tidytuesday/chess_matches.html",
    "title": "Understanding Chess Match Dataset",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#packages",
    "href": "tidytuesday/chess_matches.html#packages",
    "title": "Understanding Chess Match Dataset",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#loading-chess-dataset",
    "href": "tidytuesday/chess_matches.html#loading-chess-dataset",
    "title": "Understanding Chess Match Dataset",
    "section": "Loading Chess Dataset",
    "text": "Loading Chess Dataset\nThe chess dataset this week comes from Lichess.org via Kaggle/Mitchell J.\nThe data will also be cleaned during importation, removing all detailed information about the type of opening and leaving only broader categories of data to allow for data aggregation.\n\nchess &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-01/chess.csv') |&gt; \n  mutate(opening_main = case_when(\n    str_detect(opening_name, \":\") ~ str_extract(opening_name, \".+?(?=:)\"),\n    str_detect(opening_name, \"\\\\|\") ~ str_extract(opening_name, \".+?(?= \\\\|)\"),\n    str_detect(opening_name, \"#\") ~ str_extract(opening_name, \".+?(?= #)\"),\n    TRUE ~ opening_name)) |&gt; \n  mutate(num_moves = str_count(moves, \"\\\\S+\"))"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#collapsig-data",
    "href": "tidytuesday/chess_matches.html#collapsig-data",
    "title": "Understanding Chess Match Dataset",
    "section": "Collapsig Data",
    "text": "Collapsig Data\nWe collapse the data by grouping by opening type and filtering for more than 500 observations with this opening.\n\ntop_open &lt;- chess |&gt;  \n  group_by(opening_main) |&gt; \n  summarize(open_count = n(),\n            open_prop = open_count / nrow(chess)) |&gt; \n  arrange(desc(open_count)) |&gt; \n  filter(open_count &gt; 500) |&gt; \n  select(opening_main) |&gt; \n  pull()\n\ntop_open\n\n [1] \"Sicilian Defense\"     \"French Defense\"       \"Queen's Pawn Game\"   \n [4] \"Italian Game\"         \"King's Pawn Game\"     \"Ruy Lopez\"           \n [7] \"English Opening\"      \"Scandinavian Defense\" \"Philidor Defense\"    \n[10] \"Caro-Kann Defense\"   \n\nchess_top &lt;- chess |&gt; \n  filter(opening_main %in% top_open)"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#plotting",
    "href": "tidytuesday/chess_matches.html#plotting",
    "title": "Understanding Chess Match Dataset",
    "section": "Plotting",
    "text": "Plotting\n\nOutcomes based on opening used\nThe following shows the proportion for the winner of the gram depending on what type of opening was used. Only the most popular openings are shown.\n\nchess_top |&gt; \n  mutate(winner = case_when(\n    winner == \"white\" ~ \"Opener\",\n    winner == \"black\" ~ \"Follower\",\n    winner == \"draw\" ~ \"Draw\")) |&gt; \n  mutate(winner = factor(winner, levels = c(\"Follower\", \"Draw\", \"Opener\"))) |&gt; \n  ggplot(aes(x = opening_main, fill = winner)) +\n  geom_bar(position = \"fill\") +\n  # Tilting the text\n  #theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5)) +\n  scale_fill_brewer(palette = \"Dark2\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(x = \"Proportion\",\n      y = \"Opening\",\n      fill = \"Winner\",\n      title = \"Type Opening With Outcome Proportion\")\n\n\n\n\n\n\n\n\n###Exploring links with player rating We plot player ratings and color the observations by the type of opening. One observationis that the Sicilian openign tends to be used between higher rated player matches and the King’s Pawn game is used in lower rated player matches.\n\nchess_top |&gt; \n  ggplot(aes(x = white_rating, y = black_rating, color = opening_main)) +\n  geom_point() +\n  scale_color_brewer(palette = \"Spectral\") +\n  labs(x = \"White Rating\", \n       y = \"Black Rating\", \n       color = \"Opening\",\n       title = \"Player Rating and Type of Opening\")"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#model",
    "href": "tidytuesday/chess_matches.html#model",
    "title": "Understanding Chess Match Dataset",
    "section": "Model",
    "text": "Model\nWe make a basic model predicting whether the opening will be Sicilian in a particular game. The results are below.\n\nchess &lt;- chess |&gt; \n  mutate(sicilian = ifelse(opening_main == \"Sicilian Defense\", 1, 0))\n\nglm(sicilian ~ black_rating + num_moves, data = chess, family = binomial) |&gt; \n  broom::augment(type.predict = \"response\")\n\n# A tibble: 20,058 × 9\n   sicilian black_rating num_moves .fitted .resid      .hat .sigma    .cooksd\n      &lt;dbl&gt;        &lt;dbl&gt;     &lt;int&gt;   &lt;dbl&gt;  &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1        0         1191        13  0.0754 -0.396 0.000161   0.872 0.00000437\n 2        0         1261        16  0.0823 -0.415 0.000146   0.872 0.00000436\n 3        0         1500        61  0.113  -0.489 0.0000597  0.872 0.00000252\n 4        0         1454        61  0.107  -0.475 0.0000657  0.872 0.00000261\n 5        0         1469        95  0.110  -0.484 0.000114   0.872 0.00000472\n 6        1         1002         5  0.0593  2.38  0.000200   0.871 0.00106   \n 7        0         1423        33  0.101  -0.462 0.0000922  0.872 0.00000346\n 8        0         2108         9  0.217  -0.700 0.000487   0.872 0.0000451 \n 9        0         1392        66  0.0991 -0.457 0.0000779  0.872 0.00000286\n10        0         1209       119  0.0815 -0.412 0.000237   0.872 0.00000702\n# ℹ 20,048 more rows\n# ℹ 1 more variable: .std.resid &lt;dbl&gt;"
  },
  {
    "objectID": "tidytuesday/chess_matches.html#graphing-the-model",
    "href": "tidytuesday/chess_matches.html#graphing-the-model",
    "title": "Understanding Chess Match Dataset",
    "section": "Graphing the model",
    "text": "Graphing the model\nA model with more predictive power would have a dark shaded region on the bottom left and another on the top right of the graph. We do not find this in the graph below so we can say that this model is not capturing the likelihood of Sicilian opening taking place.\n\nglm(sicilian ~ black_rating + white_rating + num_moves + rated, \n    data = chess, family = \"binomial\") |&gt; \n  broom::augment(type.predict = \"response\") |&gt; \n  ggplot(aes(x = .fitted, y = sicilian)) + \n  geom_point(alpha = 0.1)"
  },
  {
    "objectID": "projects/amlo_mex/amlo_page.html",
    "href": "projects/amlo_mex/amlo_page.html",
    "title": "Project Under Development",
    "section": "",
    "text": "Libraries used\n\n# Libraries used\nlibrary(tidyverse)\nlibrary(ggparliament)\nlibrary(gganimate)\nlibrary(janitor)\nlibrary(readxl)\n\n\n\nImportation of Latinobarometro data\nBelow I made latinobarometro cleaning scirpt and I called it lapop_cleaner which will clean the data for data analysis puposes.\n\nlapop_cleaner &lt;- function(file_path, object_name) {\n  read_excel(file_path) |&gt; \n    slice(-1:-3) |&gt;    # Remove first 3 rows\n    distinct() |&gt;      # Remove duplicates\n    row_to_names(row_number = 1) |&gt;  # Use the first row as column names\n    clean_names() |&gt;    # Clean column names to make them unique and valid\n    select(-2) |&gt;       # Remove the second column\n    rename(answer = 1) |&gt;   # Rename the first column to 'answer'\n    filter(!(answer %in% c(\"País -   México\",   \n                           \"País -  Total\", \n                            \"(N)\"))) |&gt; \n    pivot_longer(cols = -answer,\n                 names_to = \"year\",\n                 values_to = \"proportion\") |&gt; \n    mutate(year = as.numeric(str_extract(year, \"(?&lt;=x)\\\\d{4}(?=_)\"))) |&gt; \n    mutate(proportion = case_when(proportion == \"-\" ~ 0,\n                                  TRUE ~ as.numeric(proportion)))\n}\n\nLatinobarómetro is an annual public opinion survey that measures citizens’ attitudes and perceptions across various Latin American countries on topics such as democracy, governance, and economic conditions. Since its inception in 1995, it has provided valuable insights for researchers, policymakers, and organizations interested in understanding the social and political landscape of the region.\n\n# Assign each file path to its corresponding object name individually and clean the data\nJudiciaryIndependence &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_AcuerdoDesacuerdo_El_poder_judicial_debe_ser_independiente_del_ejecutivo.xlsx\")\n\nMediaControlPresident &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_AcuerdoDesacuerdo_En_caso_de_dificultades_esta_bien_que_el_presidente_controle_los_medios_de_comunicacion.xlsx\")\n\nSupportForMilitaryGovernment &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Apoyaria_un_gobierno_militar_si_las_cosas_se_ponen_muy_dificiles.xlsx\")\n\nPresidentialApproval &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Aprobacion_de_la_gestion_del_gobierno_que_encabeza_el_Presidente.xlsx\")\n\nPoliticalSelfPositioning &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Autoubicacion_en_escala_Izquierda-Derecha.xlsx\")\n\nCongressTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Congreso.xlsx\")\n\nJudiciaryTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Poder_Judicial.xlsx\")\n\nPresidentialTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Presidente.xlsx\")\n\nElectoralInstitutionTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_la_institucion_electoral_del_pais.xlsx\")\n\nPoliticalPartiesTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_los_Partidos_Politicos.xlsx\")\n\nGovernanceByPowerGroups &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_PAIS_gobernado_por_unos_cuantos_grupos_poderosos_en_su_propio_beneficio_o_para_el_bien_de_todo_el_pueblo.xlsx\")\n\n\n\nEstablishing Party Order and Colors\nEstablishing party order from left to right\n\nparty_order &lt;- list(\n  \"PT\",          # Far-left\n  \"MORENA\",      # Left\n  \"VERDE\",       # Center-left\n  \"MC\",          # Center to Center-left\n  \"PRD\",         # Center-left\n  \"PRI\",         # Center-right\n  \"PAN\",         # Right\n  \"PES\",         # Far-right\n  \"Other_Parties\" # Other/Unknown\n)\n\nParty colors and and coalition colors in the 2024 elections.\n\nparty_colors &lt;- list(\n  PT = \"#f02b19\",           # Red\n  MORENA = \"#b5261f\",       # Dark Red\n  VERDE = \"#38a700\",        # Green\n  MC = \"#f57c00\",           # Orange\n  PRD = \"#ffcc00\",          # Yellow\n  PRI = \"#006847\",          # Green (plus Red/White in their logo)\n  PAN = \"#004a98\",          # Blue\n  PES = \"#5c246e\",          # Purple\n  Other_Parties = \"#b2b2b2\" # Grey for other/unknown parties\n)\n\ncoalition_colors &lt;- list(\n  PT = \"#a41e34\",           # Red\n  MORENA = \"#b5261f\",       # Dark Red\n  VERDE = \"#a41e34\",        # Green\n  MC = \"#f57c00\",           # Orange\n  PRD = \"#ec4891\",          # Yellow\n  PRI = \"#ec4891\",          # Green (plus Red/White in their logo)\n  PAN = \"#ec4891\",          # Blue\n  PES = \"#5c246e\",          # Purple\n  Other_Parties = \"#b2b2b2\" # Grey for other/unknown parties\n)\n\n\n\nChamber of Deputies\nSetting up the deputies data\n\ndeputies &lt;- read.csv(\"deputies_00_24.csv\") |&gt; \n  mutate(party = factor(party, levels = party_order)) |&gt; \n  arrange(party) |&gt; \n  filter(year == 2024) |&gt; \n  rename(seats = elected) |&gt; \n  select(-year) |&gt; \n  mutate(coalition = case_when(party %in% c(\"MORENA\", \"PT\", \"VERDE\") ~ \"morenacoal\",\n                               party %in% c(\"PRD\", \"PRI\") ~ \"fcpmx\",\n                               TRUE ~ party))\n\nPutting the data into a ggparliament data structure\n\n# Use ggparliament's data structure to prepare the parliament plot\nmex_par_data &lt;- parliament_data(\n  election_data = deputies,\n  type = \"semicircle\",  # This sets the semicircular layout\n  parl_rows = 10        # Number of rows in the semicircle (adjust this based on number of seats)\n)\n\nCreating a ggplot parliament with the previous datasturcture\n\n# The above fig dimensions were changed to avoid narrowing of the graph\nmex_par_data |&gt; \n  ggplot(aes(x = x, y = y)) +\n    geom_parliament_seats(size = 6, aes(color = party)) + \n    scale_colour_manual(values = party_colors) + \n    theme_void() + \n    theme(legend.position = \"null\") +\n    labs(title = \"Deptuies Elected in the 2025 Mexican Election by Party\") \n\n\n\n\n\n\n\n\nExpeirmental to make it gif\n\ndeputies &lt;- read.csv(\"deputies_00_24.csv\") %&gt;%\n  mutate(party = factor(party, levels = party_order),\n         year = factor(year)) %&gt;%  # Convert year to a factor\n  arrange(party) %&gt;%\n  rename(seats = elected)\n\n\n# Create a function to prepare data for each year\nprepare_parliament_data &lt;- function(year_data) {\n  parliament_data(\n    election_data = year_data,\n    type = \"semicircle\",  # This sets the semicircular layout\n    parl_rows = 10        # Number of rows in the semicircle\n  )\n}\n\n# Specify a custom temporary directory\ntemp_dir &lt;- tempdir()\n\n# Create animated parliament plot\ndeputies %&gt;%\n  group_by(year) %&gt;%\n  nest() %&gt;%\n  mutate(par_data = map(data, prepare_parliament_data)) %&gt;%\n  unnest(par_data) %&gt;%\n  ggplot(aes(x = x, y = y)) +\n  geom_parliament_seats(size = 6, aes(color = party)) + \n  scale_colour_manual(values = party_colors) + \n  theme_void() + \n  theme(legend.position = \"null\") +\n  labs(title = \"Deputies Elected in the Mexican Election by Party ({frame_time})\") +\n  transition_time(year)  # Now will only show specified years\n\nanimate(animated_plot, renderer = gifski_renderer(temp_dir))"
  },
  {
    "objectID": "tidytuesday/shakespeare_words.html",
    "href": "tidytuesday/shakespeare_words.html",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College. Analysis based on @deepdk"
  },
  {
    "objectID": "tidytuesday/shakespeare_words.html#loading-relevant-libraries",
    "href": "tidytuesday/shakespeare_words.html#loading-relevant-libraries",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(tidytext)\nlibrary(devtools)\nlibrary(ggwordcloud)\nlibrary(png)\nlibrary(svglite)\nlibrary(showtext)\nlibrary(sysfonts)"
  },
  {
    "objectID": "tidytuesday/shakespeare_words.html#importation-of-the-data",
    "href": "tidytuesday/shakespeare_words.html#importation-of-the-data",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Importation of the data",
    "text": "Importation of the data\n\nromeo_juliet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-17/romeo_juliet.csv')\n\n\nData Wrangling\nFilter the data-set for only the characters Romeo and Juliet.\n\nromeo_juliet &lt;- romeo_juliet |&gt;  \n  filter(character %in% c(\"Romeo\",\"Juliet\")) \n\nMaking a list of the words that we are not interested in.\n\n# Create a custom list of words to exclude\ncustom_stop_words &lt;- c(\"thou\", \"thy\", \"thee\", \"thine\", \"art\", \"hast\", \"dost\", \"ere\", \"o\",\"hath\")\n\nMake a simple data set that has a column of the character, the word spoke, and the number of times it was spoken.\n\nword_counts &lt;- romeo_juliet |&gt; \n  unnest_tokens(word, dialogue) |&gt; \n  anti_join(stop_words) |&gt;   # Remove common stop words\n  filter(!str_detect(word, \"^[0-9]+$\")) |&gt;   # Remove numbers\n  filter(!word %in% custom_stop_words) |&gt;   # Remove custom words\n  mutate(word = stringr::str_replace(word, \"'s\", \"\")) |&gt; \n  count(character, word, sort = TRUE)\n\nword_counts\n\n# A tibble: 1,941 × 3\n   character word       n\n   &lt;chr&gt;     &lt;chr&gt;  &lt;int&gt;\n 1 Romeo     love      52\n 2 Juliet    romeo     41\n 3 Juliet    love      35\n 4 Juliet    night     30\n 5 Romeo     death     22\n 6 Juliet    nurse     20\n 7 Romeo     juliet    17\n 8 Juliet    sweet     16\n 9 Romeo     fair      15\n10 Romeo     night     15\n# ℹ 1,931 more rows\n\n\nCreating a dataset for each character\n\njuliet &lt;- word_counts |&gt; \n  filter(character == \"Juliet\")\n\nromeo &lt;- word_counts |&gt; \n  filter(character == \"Romeo\")\n\n\n\nAttempt At Importing Fonts\nImporting a custom font (has not been able to work yet)\n\nsysfonts::font_add_google(\"MedievalSharp\", \"MedievalSharp\")\nshowtext::showtext_auto()\n\nmy_font &lt;- \"MedievalSharp\""
  },
  {
    "objectID": "tidytuesday/imo.html",
    "href": "tidytuesday/imo.html",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gganimate)\nlibrary(maps)\n\n\ncountry_results_df &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-24/country_results_df.csv')\nindividual_results_df &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-24/individual_results_df.csv')\n#timeline_df &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-24/timeline_df.csv')\n\nIn 2024, there were 609 people competing from 109 different countries.\n\nindiv_country &lt;- individual_results_df |&gt; \n  mutate(country2 = ifelse(str_detect(country, \"C[0-9]\"), \"Russia\", country)) \n\nindiv_country |&gt; \n  filter(year == 2024) |&gt; \n  summarise(distinct_countries = n_distinct(country2), n_countries = n())\n\n# A tibble: 1 × 2\n  distinct_countries n_countries\n               &lt;int&gt;       &lt;int&gt;\n1                109         609\n\n\n\nindiv_country &lt;- indiv_country |&gt; \n  group_by(country2, year) |&gt; \n  arrange(individual_rank) |&gt; \n  slice_head(n = 1) |&gt; \n  arrange(desc(year)) |&gt; \n  select(year, country2, individual_rank, award) |&gt; \n  mutate(country3 = case_when(\n    country2 == \"United States of America\" ~ \"USA\",\n    country2 == \"People's Republic of China\" ~ \"China\",\n    country2 == \"Türkiye\" ~ \"Turkey\",\n    country2 == \"Islamic Republic of Iran\" ~ \"Iran\",\n    country2 == \"Republic of Korea\" ~ \"South Korea\",\n    country2 == \"Islamic Republic of Iran\" ~ \"Iran\",\n    country2 == \"Turkish Republic of Northern Cyprus\" ~ \"Cyprus\",\n    country2 == \"Democratic People's Republic of Korea\" ~ \"North Korea\",\n    country2 == \"United Kingdom\" ~ \"UK\",\n    TRUE ~ country2\n  )) |&gt; \n  mutate(award = as.factor(case_when(\n         str_detect(award, \"Gold\") ~ \"Gold\",\n         str_detect(award, \"Silver\") ~ \"Silver\",\n         str_detect(award, \"Bronze\") ~ \"Bronze\",\n         TRUE ~ NA))) |&gt; \n  mutate(award = fct_relevel(award, c(\"Gold\", \"Silver\", \"Bronze\")))\n\nindiv_country\n\n# A tibble: 3,781 × 5\n# Groups:   country2, year [3,781]\n    year country2   individual_rank award  country3  \n   &lt;dbl&gt; &lt;chr&gt;                &lt;dbl&gt; &lt;fct&gt;  &lt;chr&gt;     \n 1  2024 Albania                252 Bronze Albania   \n 2  2024 Algeria                 47 Gold   Algeria   \n 3  2024 Argentina               82 Silver Argentina \n 4  2024 Armenia                182 Bronze Armenia   \n 5  2024 Australia               29 Gold   Australia \n 6  2024 Austria                 90 Silver Austria   \n 7  2024 Azerbaijan             252 Bronze Azerbaijan\n 8  2024 Bangladesh             216 Bronze Bangladesh\n 9  2024 Belarus                 11 Gold   Belarus   \n10  2024 Belgium                147 Silver Belgium   \n# ℹ 3,771 more rows\n\n\n\nworld_data &lt;- map_data(\"world\")\nworld_data |&gt;\n summarize(n_distinct(region))\n\n  n_distinct(region)\n1                252\n\nplot_imo &lt;- world_data |&gt; \n  left_join(indiv_country, by = c(\"region\" = \"country3\")) \n\nlibrary(gganimate) my_breaks &lt;- c(1, 10, 50, 200, 600)\nplot_imo |&gt; mutate(year = as.factor(year)) |&gt; #filter(year == 1979 | !is.na(individual_rank)) |&gt; filter(!is.na(individual_rank)) |&gt; ggplot(aes(x = long, y = lat, group = group)) + geom_polygon(data = world_data, aes(x = long, y = lat, group = group), color = “black”, fill = “white”) + geom_polygon(aes(fill = individual_rank, color = award)) + scale_fill_gradient(name = “best individual rank”, trans = “log”, low = “#71797E”, high = “#E6E6E6”, breaks = my_breaks, labels = my_breaks) + scale_color_manual(values = c(“#FFD700”, “#C0C0C0”, “#CE8946”), na.value=“black”, breaks = c(“Gold”, “Silver”, “Bronze”)) + gganimate::transition_states(year, state_length = 5, transition_length = 10) + labs(title = ‘Math Olympiad top scorer in {closest_state}’)"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html",
    "href": "projects/the office/office_text_analysis.html",
    "title": "The Office - Mini Text Analysis Project",
    "section": "",
    "text": "Image from peacock website"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#loading-the-dataset",
    "href": "projects/the office/office_text_analysis.html#loading-the-dataset",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Loading the Dataset",
    "text": "Loading the Dataset\nThe dataset comes from a Kaggle user Fabrizio Cominetti who acuried the data from scrapping officequotes.net. I downloaded the csv and loaded it into my directory for accsses.\n\noffice &lt;- read.csv(\"the-office_lines.csv\")\ncolnames(office)\n\n[1] \"X\"              \"Character\"      \"Line\"           \"Season\"        \n[5] \"Episode_Number\"\n\n\n\nDataset Manipulation For Graphing Character Mentions Overtime\nThis R chunk aims to create a dataset called main_4_mentions. First, a variable representing each character’s name is created, with a value of 1 if that character is mentioned in a line and 0 otherwise. The data is then grouped by episode and season, summarizing the mentions per episode. Next, the data is pivoted to create a variable called character and another variable called count, indicating how many times each character is mentioned. Additionally, a new variable called season_episode is created, which only contains values for the first episode of each season; this will serve as a marker for the start of each season in the ggplot.\n\nmain_4_mentions &lt;- office |&gt; \n  mutate(Jim = ifelse(str_detect(Line, \"(?i)jim\"), 1, 0)) |&gt; \n  mutate(Pam = ifelse(str_detect(Line, \"(?i)pam\"), 1, 0)) |&gt; \n  mutate(Michael = ifelse(str_detect(Line, \"(?i)michael\"), 1, 0)) |&gt; \n  mutate(Dwight = ifelse(str_detect(Line, \"(?i)dwight\"), 1, 0)) |&gt; \n  arrange(Season, Episode_Number) |&gt; \n  group_by(Season, Episode_Number) |&gt; \n  summarize(Jim = sum(Jim),\n            Pam = sum(Pam),\n            Michael = sum(Michael),\n            Dwight = sum(Dwight)) |&gt; \n  ungroup() |&gt; \n  mutate(season_episode_num = row_number()) |&gt; \n  mutate(season_episode = ifelse(Episode_Number == 1, Season, \"\")) |&gt; \n  select(Jim:season_episode) |&gt; \n  pivot_longer(cols = Jim:Dwight,\n               names_to = \"character\",\n               values_to = \"count\")\nmain_4_mentions\n\n# A tibble: 736 × 4\n   season_episode_num season_episode character count\n                &lt;int&gt; &lt;chr&gt;          &lt;chr&gt;     &lt;dbl&gt;\n 1                  1 \"1\"            Jim           7\n 2                  1 \"1\"            Pam          17\n 3                  1 \"1\"            Michael       7\n 4                  1 \"1\"            Dwight        8\n 5                  2 \"\"             Jim           6\n 6                  2 \"\"             Pam           4\n 7                  2 \"\"             Michael      15\n 8                  2 \"\"             Dwight       10\n 9                  3 \"\"             Jim          17\n10                  3 \"\"             Pam          10\n# ℹ 726 more rows\n\n\nI am identifying the season_episode_num where a new season begins to add vertical lines on the graph, enhancing its visualization.\n\nvline_positions &lt;- main_4_mentions |&gt; \n  filter(season_episode != \"\") |&gt; \n  distinct(season_episode_num) |&gt; \n  pull()\nprint(vline_positions)\n\n[1]   1   7  29  52  65  90 114 138 162"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "href": "projects/the office/office_text_analysis.html#graph-of-the-main-four-characters-overtime",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Graph of the main four characters overtime",
    "text": "Graph of the main four characters overtime\nThe data is now plotted using the geom_smooth function, which captures the general patterns over the episodes and seasons. We find that Michael is the most mentioned character until the later seasons. Mentions of Jim remain relatively stable over time, while mentions of Pam and Dwight decline around seasons 5 and 6 before starting to trend upward.\n\nmain_4_mentions |&gt; \n  ggplot(aes(x = season_episode_num, y = count, color = character)) +\n  geom_smooth(se = FALSE) +\n  labs(x = \"Season\",\n       y = \"Mentions\",\n       color = \"Character\",\n       title = 'Mentions Of Main Characters in \"The Office\" Across the Seasons') +\n  scale_x_continuous( breaks = main_4_mentions$season_episode_num,\n                      labels = main_4_mentions$season_episode) +\n  scale_color_manual(values = c(\"Pam\" = \"#FF6F61\",\n                                \"Jim\" = \"#007B7F\",\n                                \"Dwight\" = \"#7D3C98\",\n                                \"Michael\" = \"#DAA520\")) +\n  geom_vline(xintercept = vline_positions, color = \"black\", alpha = 0.2, linetype = \"solid\") +\n  theme_minimal() +\n  theme(panel.grid = element_blank())"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#creating-a-plot-of-most-on-task-office-characters",
    "href": "projects/the office/office_text_analysis.html#creating-a-plot-of-most-on-task-office-characters",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Creating a plot of most “on task” Office Characters",
    "text": "Creating a plot of most “on task” Office Characters\n\nData manipulation\nThe goal of this first R chunk is to create two objects: the first, main_characters, will contain the names of the 15 main characters from the show, and the second will be a regular expression used to identify work-related lines. The work-related phrases were generated by ChatGPT.\n\nmain_characters &lt;- c(\"Michael\", \"Jim\", \"Pam\", \"Dwight\", \"Ryan\", \"Angela\", \n                \"Andy\", \"Stanley\", \"Phyllis\", \"Kelly\", \"Toby\", \n                \"Kevin\", \"Oscar\", \"Creed\", \"Meredith\")\n\nontask_regular_expression &lt;- \"(?i)(Sales call|Close the deal|Client meeting|Team building|Sales quota|Dunder Mifflin|Paper company|File|Report|Workplace safety|Expense report|Business trip|Client relations|Company policy|Human resources|Submit a proposal|Meet the deadline|Job performance|Close a sale|Office supplies|Sales pitch|Productivity report|Employee evaluation|Quarterly review|Manager meeting|Sales team|Sales numbers|Work email|Conference call|Work-life balance|Overtime|Office hours|Weekly meeting|Promotion|Sales report|Job interview|Submit the paperwork|Company-wide memo|Business strategy|Client presentation|Office party|Budget meeting|New hire|Work project|Revenue target|Annual review|Management decision|Employee training|Company retreat|Work performance|quarterlies|corporate|efficien|fax)\"\n\nI filtered the office dataset using the main_characters object and created variables called proportion and percentages. These represent the proportion of lines identified as containing work-related phrases.\n\nontask &lt;- office |&gt; \n  filter(Character %in% main_characters) |&gt; \n  mutate(on_task = case_when(\n    str_detect(Line, ontask_regular_expression) ~ 1,\n    TRUE ~ 0)) |&gt; \n  group_by(Character) |&gt; \n  summarise(prop = sum(on_task)/n()) |&gt; \n  mutate(percentage = prop * 100)\nhead(ontask)\n\n# A tibble: 6 × 3\n  Character    prop percentage\n  &lt;chr&gt;       &lt;dbl&gt;      &lt;dbl&gt;\n1 Andy      0.0127       1.27 \n2 Angela    0.00835      0.835\n3 Creed     0.0113       1.13 \n4 Dwight    0.0156       1.56 \n5 Jim       0.00825      0.825\n6 Kelly     0.00654      0.654\n\n\n\n\nCreating a custom color palette (experimental)\nI asked ChatGPT to create a custom color palette for the characters of The Office. The colors are intended to capture each character’s “essence” for plotting purposes.\n\npalette &lt;- c(\"Michael\" = \"#7FB3D5\", \"Jim\" = \"#8B8B8B\", \"Pam\" = \"#FF8DAA\", \n             \"Dwight\" = \"#FFD700\", \"Ryan\" = \"#28A745\", \"Angela\" = \"#5B2C6F\", \n             \"Andy\" = \"#FF6F61\", \"Stanley\" = \"#5C3A1D\", \"Phyllis\" = \"#A0522D\", \n             \"Kelly\" = \"#FF1493\", \"Toby\" = \"#4A90E2\", \"Kevin\" = \"#FFA500\", \n             \"Oscar\" = \"#1E4D2B\", \"Creed\" = \"#C0C0C0\", \"Meredith\" = \"#A50000\")"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#section",
    "href": "projects/the office/office_text_analysis.html#section",
    "title": "The Office - Text Analysis Project",
    "section": "",
    "text": "ontask |&gt; \n  ggplot(aes(x = reorder(Character, prop), y = prop, fill = Character)) +\n  geom_col(show.legend = FALSE) +\n  coord_flip() +\n  scale_fill_manual(values = palette) +\n  theme_minimal() +\n  labs(y = \"Percentage\",\n       x = \"Character\",\n       title = \"Percentage of Work Related Lines By Character From 'The Office'\")"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#plotting",
    "href": "projects/the office/office_text_analysis.html#plotting",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Plotting",
    "text": "Plotting\nI created a graph showing the percentage of “work-related” lines by office character. Toby has the most work-related lines, with a score of 0.9% higher than Dwight, who comes in second. Kevin has the fewest work-related lines. The percentages displayed on the graph are rounded to the nearest tenth, while the bar lengths represent the exact proportions. This explains why, for example, Stanley and Meredith have the same percentage label but different bar lengths.\n\nontask |&gt; \n  ggplot(aes(x = reorder(Character, prop), y = prop, fill = Character)) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = paste0(round(percentage, 1), \"%\")), \n            vjust = 0.5, \n            hjust = 1.05,\n            size = 5,\n            color = \"white\",\n            fontface = \"bold\") +\n  scale_fill_manual(values = palette) +\n  labs(y = \"Percentage Work Related\",\n       x = \"Character\",\n       title = \"Percentage of Work Related Lines By Character From 'The Office'\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        panel.grid = element_blank(),\n        plot.title = element_text(hjust = 0.6)) +\n  coord_flip()"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#analyzing-which-character-has-the-longest-average-lines",
    "href": "projects/the office/office_text_analysis.html#analyzing-which-character-has-the-longest-average-lines",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Analyzing which character has the longest average lines",
    "text": "Analyzing which character has the longest average lines\n\nData preparation\nI will use the same 15 key characters from the previous analysis. I’ll create a variable called avg_line to represent the average length of a line. To count the words per line, I will apply a regular expression. Finally, I will summarize the dataset.\n\navg_line_length &lt;- office |&gt; \n  filter(Character %in% main_characters) |&gt; \n  mutate(word_count = str_count(Line, \"\\\\w+\")) |&gt; \n  group_by(Character) |&gt; \n  summarize(avg_line = mean(word_count)) |&gt; \n  arrange(desc(avg_line))\n  \navg_line_length\n\n# A tibble: 15 × 2\n   Character avg_line\n   &lt;chr&gt;        &lt;dbl&gt;\n 1 Michael      15.3 \n 2 Andy         13.5 \n 3 Dwight       12.6 \n 4 Kelly        12.1 \n 5 Creed        11.4 \n 6 Ryan         11.0 \n 7 Toby         10.9 \n 8 Jim          10.4 \n 9 Pam          10.0 \n10 Angela        9.90\n11 Oscar         9.87\n12 Stanley       9.68\n13 Kevin         9.44\n14 Meredith      9.24\n15 Phyllis       9.00"
  },
  {
    "objectID": "projects/the office/office_text_analysis.html#plotting-of-average-amount-of-words-in-a-line",
    "href": "projects/the office/office_text_analysis.html#plotting-of-average-amount-of-words-in-a-line",
    "title": "The Office - Mini Text Analysis Project",
    "section": "Plotting of average amount of words in a line",
    "text": "Plotting of average amount of words in a line\nThis graph illustrates the average number of words per character’s line, highlighting which characters dominate conversations and which tend to be interrupted mid-thought. However, shorter lines may simply indicate they have less to say. Michael has the longest lines, followed by Andy and Dwight, while Phyllis and Meredith, the two female characters, have the shortest lines.\n\navg_line_length |&gt; \n  ggplot(aes(x = reorder(Character, avg_line), y = avg_line, fill = Character)) +\n  geom_col(show.legend = FALSE) +\n  geom_text(aes(label = paste0(round(avg_line, 1))), \n            vjust = 0.5, \n            hjust = 1.11,\n            size = 5,\n            color = \"white\",\n            fontface = \"bold\") +\n  scale_fill_manual(values = palette) +\n  labs(y = \"Average Word Count\",\n       x = \"Character\",\n       title = \"Average Count of Words in a Character's Line\") +\n  theme_minimal() +\n  theme(axis.text.x = element_blank(),\n        panel.grid = element_blank(),\n        plot.title = element_text(hjust = 0.5)) +\n  coord_flip()"
  },
  {
    "objectID": "practice/ggplot_practice.html#data",
    "href": "practice/ggplot_practice.html#data",
    "title": "ggplot Practice For Review",
    "section": "Data",
    "text": "Data\nThis data will be used in one of my projects analyzing MORENA’s rise to power. I compiled the data from IPU (Global data on national parliaments). We will only make a graph for the 2024 composition but a more in depth analysis will be a part of my project under development.\n\n\n\n\n\n\nNote\n\n\n\nThe party name must be under a variable named party and the number of seats in seats.\n\n\n\ndep_2024 &lt;- read.csv(\"deputies.csv\") |&gt; \n  mutate(party = factor(party, levels = party_order)) |&gt; \n  arrange(party) |&gt; \n  filter(year == 2024) |&gt; \n  rename(seats = elected) |&gt; \n  select(-year)\n\nhead(dep_2024)\n\n                                    party seats\n1 National Regeneration Movement (MORENA)   236\n2  Ecologist Green Party of Mexico (PVEM)    77\n3                        Labor Party (PT)    51\n4                 Citizens' Movement (MC)    27\n5                           Other Parties     1\n6 Institutional Revolutionary Party (PRI)    35"
  },
  {
    "objectID": "practice/ggplot_practice.html#creating-the-ggparliament-data-strcutre",
    "href": "practice/ggplot_practice.html#creating-the-ggparliament-data-strcutre",
    "title": "ggplot Practice For Review",
    "section": "Creating the ggparliament data strcutre",
    "text": "Creating the ggparliament data strcutre\nThis step is essential to be able to use ggpalriament in ggplot. The data structure must be changed in the following manner.\n\n# Use ggparliament's data structure to prepare the parliament plot\nmex_par_data &lt;- parliament_data(\n  election_data = dep_2024,\n  type = \"semicircle\",  # This sets the semicircular layout\n  parl_rows = 10        # Number of rows in the semicircle (adjust this based on number of seats)\n)\n\nIn the graph, shades of red represent the ‘Sigamos Haciendo Historia’ coalition, shades of blue represent the ‘Fuerza y Corazón por México’ coalition, orange represents the Movimiento Ciudadano party, and the purple circle represents other parties.\n\n# The above fig dimensions were changed to avoid narrowing of the graph\nmex_par_data |&gt; \n# Plot the semicircular parliament chart\n  ggplot(aes(x = x, y = y, colour = party, fill = party)) +\n    geom_parliament_seats(size = 5.5) +  # Adjust based on how large you want the circles\n    scale_colour_manual(values = party_colors) +  # Border colors\n    theme_void() +  # Remove axis and background\n    theme(legend.position = \"null\") + # Position cna be changed to bottom, right, etc...\n    labs(title = \"Deptuies Elected in the 2025 Mexican Election by Party\")"
  },
  {
    "objectID": "projects/amlo_mex/UntitledQMD.html",
    "href": "projects/amlo_mex/UntitledQMD.html",
    "title": "Kevin Valdivia",
    "section": "",
    "text": "# Libraries used\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggparliament)\nlibrary(gganimate)\n\n# Define party order and colors\nparty_order &lt;- c(\n  \"PT\",      # Far-left\n  \"MORENA\",  # Left\n  \"VERDE\",   # Center-left\n  \"MC\",      # Center to Center-left\n  \"PRD\",     # Center-left\n  \"PRI\",     # Center-right\n  \"PAN\",     # Right\n  \"PES\",     # Far-right\n  \"Other_Parties\" # Other/Unknown\n)\n\nparty_colors &lt;- c(\n  PT = \"#f02b19\",           # Red\n  MORENA = \"#b5261f\",       # Dark Red\n  VERDE = \"#38a700\",        # Green\n  MC = \"#f57c00\",           # Orange\n  PRD = \"#ffcc00\",          # Yellow\n  PRI = \"#006847\",          # Green (plus Red/White in their logo)\n  PAN = \"#004a98\",          # Blue\n  PES = \"#5c246e\",          # Purple\n  Other_Parties = \"#b2b2b2\" # Grey for other/unknown parties\n)\n\n# Load data and preprocess\ndeputies &lt;- read.csv(\"deputies_00_24.csv\") %&gt;%\n  mutate(party = factor(party, levels = party_order)) %&gt;%\n  arrange(party) %&gt;%\n  rename(seats = elected)\n\n# Create a function to prepare data for each year\nprepare_parliament_data &lt;- function(year_data) {\n  parliament_data(\n    election_data = year_data,\n    type = \"semicircle\",  # This sets the semicircular layout\n    parl_rows = 10        # Number of rows in the semicircle\n  )\n}\n\n# Specify a custom temporary directory\ntemp_dir &lt;- tempdir()\n\n# Create animated parliament plot\ngif &lt;- deputies %&gt;%\n  group_by(year) %&gt;%                # Group data by year\n  nest() %&gt;%                       # Nest the data for each year\n  mutate(par_data = map(data, prepare_parliament_data)) %&gt;% # Prepare parliament data\n  unnest(par_data) %&gt;%             # Unnest the data for plotting\n  ggplot(aes(x = x, y = y)) +\n  geom_parliament_seats(size = 6, aes(color = party)) + \n  scale_colour_manual(values = party_colors) + \n  theme_void() + \n  theme(legend.position = \"null\") +\n  labs(title = \"Deputies Elected in the Mexican Election by Party ({frame_time})\") +\n  transition_time(year)          # Use the 'year' column for animation              # Smooth transition between frames\ngif\n\n\n\n\n\n\n\n# Render the animation to the temporary directory\n# animate(animated_plot, renderer = gifski_renderer(temp_dir))"
  },
  {
    "objectID": "tidytuesday/animal_parks.html",
    "href": "tidytuesday/animal_parks.html",
    "title": "Biodiverisity in West Coast National Parks",
    "section": "",
    "text": "Waffle was used to create the waffle graph.\n\nlibrary(tidyverse)\nlibrary(waffle)"
  },
  {
    "objectID": "tidytuesday/animal_parks.html#plotting",
    "href": "tidytuesday/animal_parks.html#plotting",
    "title": "Biodiverisity in West Coast National Parks",
    "section": "Plotting",
    "text": "Plotting\nI plot a waffle chart that shows the biodiversity of biological groups amoung the three west coast naitonal parks in the dataset.\n\nwc_species |&gt; \n  mutate(ParkName = str_extract(ParkName, \".*(?= National Park)\")) |&gt; \n  ggplot(aes(fill = CategoryName, values = n)) +\n  geom_waffle(color = \"white\", size=0.25, n_rows = 10, flip = TRUE) +\n  facet_wrap(~ParkName, strip.position = \"bottom\") +\n  scale_x_discrete() +\n  scale_y_continuous(label = function(x) x * 100, \n                    expand = c(0,0)) +\n  coord_equal() +\n  theme_minimal() +\ntheme(\n    panel.grid = element_blank(), \n    axis.ticks.y = element_line()\n    #strip.text = element_text(face = \"bold\")  # Make facet labels bold\n  ) +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = custom_palette) +\n  labs(fill = \"Biological Group\",\n       title = \"Biodiversity in West Coast National Parks\",\n       subtitle = \"Each Square Represents 10 Species by Biological Category\")"
  },
  {
    "objectID": "tidytuesday/biodiversity_national_parks.html",
    "href": "tidytuesday/biodiversity_national_parks.html",
    "title": "Biodiverisity in West Coast National Parks",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College."
  },
  {
    "objectID": "tidytuesday/biodiversity_national_parks.html#plotting",
    "href": "tidytuesday/biodiversity_national_parks.html#plotting",
    "title": "Biodiverisity in West Coast National Parks",
    "section": "Plotting",
    "text": "Plotting\nI plot a waffle chart that shows the biodiversity of biological groups amoung the three west coast naitonal parks in the dataset.\n\nwc_species |&gt; \n  mutate(ParkName = str_extract(ParkName, \".*(?= National Park)\")) |&gt; \n  ggplot(aes(fill = CategoryName, values = n)) +\n  geom_waffle(color = \"white\", size=0.25, n_rows = 10, flip = TRUE) +\n  facet_wrap(~ParkName, strip.position = \"bottom\") +\n  scale_x_discrete() +\n  scale_y_continuous(label = function(x) x * 100, \n                    expand = c(0,0)) +\n  coord_equal() +\n  theme_minimal() +\ntheme(\n    panel.grid = element_blank(), \n    axis.ticks.y = element_line()\n    #strip.text = element_text(face = \"bold\")  # Make facet labels bold\n  ) +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  scale_fill_manual(values = custom_palette) +\n  labs(fill = \"Biological Group\",\n       title = \"Biodiversity in West Coast National Parks\",\n       subtitle = \"Each Square Represents 10 Species by Biological Category\")"
  },
  {
    "objectID": "projects/amlo_mex/documentation_mex.html",
    "href": "projects/amlo_mex/documentation_mex.html",
    "title": "Documentation And More Details About The Data",
    "section": "",
    "text": "Latinobarometro\n\n\nCodebook for Latinobarómetro Data\n\n\n\n\n\n\n\nVariable Name\nDescription\n\n\n\n\nJudiciaryIndependence\nPor favor, dígame si está muy de acuerdo (1), de acuerdo (2), en desacuerdo (3) o muy en desacuerdo (4), con las siguientes afirmaciones. El poder judicial debe ser independiente del ejecutivo.  English: Please tell me if you strongly agree (1), agree (2), disagree (3), or strongly disagree (4) with the following statements. The judiciary should be independent of the executive.\n\n\nMediaControlPresident\nPor favor, dígame si está muy de acuerdo (1), de acuerdo (2), en desacuerdo (3) o muy en desacuerdo (4), con las siguientes afirmaciones. En caso de dificultades está bien que el presidente controle los medios de comunicación.  English: Please tell me if you strongly agree (1), agree (2), disagree (3), or strongly disagree (4) with the following statements. In case of difficulties, it’s okay for the president to control the media.\n\n\nSupportForMilitaryGovernment\nApoyaría un gobierno militar si las cosas se ponen muy difíciles.  English: Would you support a military government if things get very difficult?\n\n\nPresidentialApproval\n¿Ud. aprueba o no aprueba la gestión del gobierno que encabeza el presidente (nombre)?  English: Do you approve or disapprove of the management of the government led by the president (name)?\n\n\nPoliticalSelfPositioning\nEn política, la gente normalmente habla de “izquierda” y “derecha”. En una escala donde 0 es la izquierda y 10 es la derecha, ¿dónde te ubicarías?  English: In politics, people usually talk about “left” and “right.” On a scale where 0 is left and 10 is right, where would you place yourself?\n\n\nCongressTrust\nPor favor, mire esta tarjeta y dígame, para cada uno de los grupos, instituciones o personas de la lista ¿cuánta confianza tiene usted en ellas: mucha (1), algo (2), poca (3) o ninguna confianza (4) en…? Congreso  English: Please look at this card and tell me, for each of the groups, institutions, or people on the list, how much trust you have in them: a lot (1), some (2), little (3), or no trust (4) in…? Congress.\n\n\nJudiciaryTrust\nPor favor, mire esta tarjeta y dígame, para cada uno de los grupos, instituciones o personas de la lista ¿cuánta confianza tiene usted en ellas: mucha (1), algo (2), poca (3) o ninguna confianza (4) en…? Poder Judicial  English: Please look at this card and tell me, for each of the groups, institutions, or people on the list, how much trust you have in them: a lot (1), some (2), little (3), or no trust (4) in…? Judiciary.\n\n\nPresidentialTrust\nPor favor, mire esta tarjeta y dígame, para cada uno de los grupos, instituciones o personas de la lista ¿cuánta confianza tiene usted en ellas: mucha (1), algo (2), poca (3) o ninguna confianza (4) en…? El presidente  English: Please look at this card and tell me, for each of the groups, institutions, or people on the list, how much trust you have in them: a lot (1), some (2), little (3), or no trust (4) in…? The president.\n\n\nElectoralInstitutionTrust\nPor favor, mire esta tarjeta y dígame, para cada uno de los grupos, instituciones o personas de la lista ¿cuánta confianza tiene usted en ellas: mucha (1), algo (2), poca (3) o ninguna confianza (4) en…? {la institución Electoral del país}  English: Please look at this card and tell me, for each of the groups, institutions, or people on the list, how much trust you have in them: a lot (1), some (2), little (3), or no trust (4) in…? The electoral institution of the country.\n\n\nPoliticalPartiesTrust\nPor favor, mire esta tarjeta y dígame, para cada uno de los grupos, instituciones o personas de la lista ¿cuánta confianza tiene usted en ellas: mucha (1), algo (2), poca (3) o ninguna confianza (4) en…? Los partidos políticos  English: Please look at this card and tell me, for each of the groups, institutions, or people on the list, how much trust you have in them: a lot (1), some (2), little (3), or no trust (4) in…? Political parties.\n\n\nGovernanceByPowerGroups\nEn términos generales ¿Diría usted que {PAÍS} está gobernado por unos cuantos grupos poderosos en su propio beneficio, o que está gobernado para el bien de todo el pueblo?  English: In general, would you say that {COUNTRY} is governed by a few powerful groups for their own benefit, or that it is governed for the good of all the people?"
  },
  {
    "objectID": "projects/amlo_mex/coding_working.html",
    "href": "projects/amlo_mex/coding_working.html",
    "title": "Project Under Development",
    "section": "",
    "text": "Libraries used\n\n# Libraries used\nlibrary(tidyverse)\nlibrary(ggparliament)\nlibrary(gganimate)\nlibrary(janitor)\nlibrary(readxl)\n\n\n\nImportation of Latinobarometro data\nBelow I made latinobarometro cleaning scirpt and I called it lapop_cleaner which will clean the data for data analysis puposes.\n\nlapop_cleaner &lt;- function(file_path, object_name) {\n  read_excel(file_path) |&gt; \n    slice(-1:-3) |&gt;    # Remove first 3 rows\n    distinct() |&gt;      # Remove duplicates\n    row_to_names(row_number = 1) |&gt;  # Use the first row as column names\n    clean_names() |&gt;    # Clean column names to make them unique and valid\n    select(-2) |&gt;       # Remove the second column\n    rename(answer = 1) |&gt;   # Rename the first column to 'answer'\n    filter(!(answer %in% c(\"País -   México\",   \n                           \"País -  Total\", \n                            \"(N)\"))) |&gt; \n    pivot_longer(cols = -answer,\n                 names_to = \"year\",\n                 values_to = \"proportion\") |&gt; \n    mutate(year = as.numeric(str_extract(year, \"(?&lt;=x)\\\\d{4}(?=_)\"))) |&gt; \n    mutate(proportion = case_when(proportion == \"-\" ~ 0,\n                                  TRUE ~ as.numeric(proportion)))\n}\n\nLatinobarómetro is an annual public opinion survey that measures citizens’ attitudes and perceptions across various Latin American countries on topics such as democracy, governance, and economic conditions. Since its inception in 1995, it has provided valuable insights for researchers, policymakers, and organizations interested in understanding the social and political landscape of the region.\n\n# Assign each file path to its corresponding object name individually and clean the data\nJudiciaryIndependence &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_AcuerdoDesacuerdo_El_poder_judicial_debe_ser_independiente_del_ejecutivo.xlsx\")\n\nMediaControlPresident &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_AcuerdoDesacuerdo_En_caso_de_dificultades_esta_bien_que_el_presidente_controle_los_medios_de_comunicacion.xlsx\")\n\nSupportForMilitaryGovernment &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Apoyaria_un_gobierno_militar_si_las_cosas_se_ponen_muy_dificiles.xlsx\")\n\nPresidentialApproval &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Aprobacion_de_la_gestion_del_gobierno_que_encabeza_el_Presidente.xlsx\")\n\nPoliticalSelfPositioning &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Autoubicacion_en_escala_Izquierda-Derecha.xlsx\")\n\nCongressTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Congreso.xlsx\")\n\nJudiciaryTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Poder_Judicial.xlsx\")\n\nPresidentialTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_el_Presidente.xlsx\")\n\nElectoralInstitutionTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_la_institucion_electoral_del_pais.xlsx\")\n\nPoliticalPartiesTrust &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_Confianza_en_los_Partidos_Politicos.xlsx\")\n\nGovernanceByPowerGroups &lt;- lapop_cleaner(\n  \"latinobarometro/LAT_PAIS_gobernado_por_unos_cuantos_grupos_poderosos_en_su_propio_beneficio_o_para_el_bien_de_todo_el_pueblo.xlsx\")\n\n\n\nEstablishing Party Order and Colors\nEstablishing party order from left to right\n\nparty_order &lt;- list(\n  \"PT\",          # Far-left\n  \"MORENA\",      # Left\n  \"VERDE\",       # Center-left\n  \"MC\",          # Center to Center-left\n  \"PRD\",         # Center-left\n  \"PRI\",         # Center-right\n  \"PAN\",         # Right\n  \"PES\",         # Far-right\n  \"Other_Parties\" # Other/Unknown\n)\n\nParty colors and and coalition colors in the 2024 elections.\n\nparty_colors &lt;- list(\n  PT = \"#f02b19\",           # Red\n  MORENA = \"#b5261f\",       # Dark Red\n  VERDE = \"#38a700\",        # Green\n  MC = \"#f57c00\",           # Orange\n  PRD = \"#ffcc00\",          # Yellow\n  PRI = \"#006847\",          # Green (plus Red/White in their logo)\n  PAN = \"#004a98\",          # Blue\n  PES = \"#5c246e\",          # Purple\n  Other_Parties = \"#b2b2b2\" # Grey for other/unknown parties\n)\n\ncoalition_colors &lt;- list(\n  PT = \"#a41e34\",           # Red\n  MORENA = \"#b5261f\",       # Dark Red\n  VERDE = \"#a41e34\",        # Green\n  MC = \"#f57c00\",           # Orange\n  PRD = \"#ec4891\",          # Yellow\n  PRI = \"#ec4891\",          # Green (plus Red/White in their logo)\n  PAN = \"#ec4891\",          # Blue\n  PES = \"#5c246e\",          # Purple\n  Other_Parties = \"#b2b2b2\" # Grey for other/unknown parties\n)\n\n\n\nChamber of Deputies\nSetting up the deputies data\n\ndeputies &lt;- read.csv(\"deputies_00_24.csv\") |&gt; \n  mutate(party = factor(party, levels = party_order)) |&gt; \n  arrange(party) |&gt; \n  filter(year == 2024) |&gt; \n  rename(seats = elected) |&gt; \n  select(-year) |&gt; \n  mutate(coalition = case_when(party %in% c(\"MORENA\", \"PT\", \"VERDE\") ~ \"morenacoal\",\n                               party %in% c(\"PRD\", \"PRI\") ~ \"fcpmx\",\n                               TRUE ~ party))\n\nPutting the data into a ggparliament data structure\n\n# Use ggparliament's data structure to prepare the parliament plot\ndeputy_2024_data &lt;- parliament_data(\n  election_data = deputies,\n  type = \"semicircle\",  # This sets the semicircular layout\n  parl_rows = 10        # Number of rows in the semicircle (adjust this based on number of seats)\n)\n\nCreating a ggplot parliament with the previous datasturcture\n\n# The above fig dimensions were changed to avoid narrowing of the graph\ndeputy_2024_data |&gt; \n  ggplot(aes(x = x, y = y)) +\n    geom_parliament_seats(size = 6, aes(color = party)) + \n    scale_colour_manual(values = party_colors) + \n    theme_void() + \n    theme(legend.position = \"null\") +\n    labs(title = \"Cámara de Diputados 2024\") \n\n\n\n\n\n\n\n\n\n\nSenate\nSetting up the deputies data\n\nsenate &lt;- read.csv(\"senate_00_24.csv\") |&gt; \n  mutate(party = factor(party, levels = party_order)) |&gt; \n  arrange(party) |&gt; \n  filter(year == 2024) |&gt; \n  rename(seats = elected) |&gt; \n  select(-year) |&gt; \n  mutate(coalition = case_when(party %in% c(\"MORENA\", \"PT\", \"VERDE\") ~ \"morenacoal\",\n                               party %in% c(\"PRD\", \"PRI\") ~ \"fcpmx\",\n                               TRUE ~ party))\n\nPutting the data into a ggparliament data structure\n\n# Use ggparliament's data structure to prepare the parliament plot\nsenate_2024_data &lt;- parliament_data(\n  election_data = senate,\n  type = \"semicircle\",  # This sets the semicircular layout\n  parl_rows = 6        # Number of rows in the semicircle (adjust this based on number of seats)\n)\n\nCreating a ggplot parliament with the previous datasturcture\n\n# The above fig dimensions were changed to avoid narrowing of the graph\nsenate_2024_data |&gt; \n  ggplot(aes(x = x, y = y)) +\n    geom_parliament_seats(size = 11, aes(color = party)) + \n    scale_colour_manual(values = party_colors) + \n    theme_void() + \n    theme(legend.position = \"null\") +\n    labs(title = \"Senado de la Republica 2024\") \n\n\n\n\n\n\n\n\nExpeirmental to make it gif\n\ndeputies &lt;- read.csv(\"deputies_00_24.csv\") %&gt;%\n  mutate(party = factor(party, levels = party_order),\n         year = factor(year)) %&gt;%  # Convert year to a factor\n  arrange(party) %&gt;%\n  rename(seats = elected)\n\n\n# Create a function to prepare data for each year\nprepare_parliament_data &lt;- function(par_data, rows_num) {\n  parliament_data(\n    election_data = year_data,\n    type = \"semicircle\",  # This sets the semicircular layout\n    parl_rows = 10        # Number of rows in the semicircle\n  )\n}\n\n# Specify a custom temporary directory\ntemp_dir &lt;- tempdir()\n\n# Create animated parliament plot\ndeputies %&gt;%\n  group_by(year) %&gt;%\n  nest() %&gt;%\n  mutate(par_data = map(data, prepare_parliament_data)) %&gt;%\n  unnest(par_data) %&gt;%\n  ggplot(aes(x = x, y = y)) +\n  geom_parliament_seats(size = 6, aes(color = party)) + \n  scale_colour_manual(values = party_colors) + \n  theme_void() + \n  theme(legend.position = \"null\") +\n  labs(title = \"Deputies Elected in the Mexican Election by Party ({frame_time})\") +\n  transition_time(year)  # Now will only show specified years\n\nanimate(animated_plot, renderer = gifski_renderer(temp_dir))"
  },
  {
    "objectID": "tidytuesday/monsters.html",
    "href": "tidytuesday/monsters.html",
    "title": "Monster Movie Generes",
    "section": "",
    "text": "Libraries\n\nlibrary(tidyverse)\n\n# install.packages(\"devtools\") \n# devtools::install_github(\"haleyjeppson/ggmosaic\")\nlibrary(ggmosaic)\nlibrary(tidymodels)\nlibrary(rpart.plot)\n\n\nmonster_movie_genres &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movie_genres.csv')\nmonster_movies &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-29/monster_movies.csv') |&gt; \n  separate_rows(genres, sep = \",\") |&gt; \n  mutate(value = 1) |&gt; \n  pivot_wider(names_from = genres, values_from = value, values_fill = 0)\n\n\nplot_data &lt;- monster_movies |&gt;\n    mutate(title_type = str_to_title(title_type)) |&gt; \n    mutate(decade = (year %/% 10) * 10) |&gt; \n    filter(decade &gt;= 1960) |&gt; \n    drop_na(title_type, decade) |&gt;\n    count(title_type, decade)\n  \n  \nplot_data |&gt;\n    ggplot() +\n    \n    # Geoms\n    geom_mosaic(aes(weight = n, x = product(decade), \n                    fill = title_type)) +\n    theme_void() +\n    labs(title = \"Proportion\") +\n    theme(axis.text.x = element_text(),\n          axis.text.y = element_text(),\n          legend.position = \"none\") +\n    scale_y_continuous() +\n    annotate( \"text\",\n              x = .55, y = .5, label = \"Movie\",\n              color = \"white\", size = 7, vjust = 1, hjust = 0) +\n      annotate(\"text\",\n                x = .52, y = .8, label = \"TV Movie\",\n                color = \"white\", size = 7, vjust = 1, hjust = 0) +\n      annotate( \"text\",\n                x = .55, y = .95, label = \"Video\",\n                color = \"white\", size = 7, vjust = 1, hjust = 0) +\n    scale_fill_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n\n\n\nmonster_model &lt;- monster_movies |&gt;\n  select(primary_title, year, runtime_minutes, average_rating,\n         num_votes, Comedy:Music, Short:War)\n\nmovie_rec &lt;- recipe(average_rating ~ ., \n                    data = monster_model) |&gt;\n  update_role(primary_title, new_role = \"ID\")\n\nmovie_mod_lm &lt;- linear_reg() |&gt;\n  set_engine(engine = \"lm\") |&gt;\n  set_mode(mode = \"regression\")\n\nmovie_wflow_lm &lt;- workflow() |&gt; \n  add_model(movie_mod_lm) |&gt; \n  add_recipe(movie_rec)\n\nmovie_wflow_lm |&gt; \n  fit(data = monster_model) |&gt; \n  predict(new_data = monster_model) |&gt; \n  cbind(monster_model) |&gt; \n  ggplot(aes(x = average_rating, y = .pred)) +\n  geom_point() +\n  geom_abline(intercept = 0, slope = 1)\n\n\n\n\n\n\n\n\n\nmovie_mod_cart &lt;- decision_tree() |&gt; \n  set_engine(engine = \"rpart\") |&gt; \n  set_mode(mode = \"regression\")\n\nmovie_wflow_cart &lt;- workflow() |&gt; \n  add_model(movie_mod_cart) |&gt; \n  add_recipe(movie_rec)\n\nmovie_wflow_cart |&gt; \n  fit(data = monster_model) |&gt; \n  predict(new_data = monster_model) |&gt; \n  cbind(monster_model) |&gt; \n  ggplot(aes(x = average_rating, y = .pred)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nmovies_tree &lt;- movie_wflow_cart |&gt; \n  fit(data = monster_model) |&gt; \n  extract_fit_parsnip()\n\nrpart.plot(movies_tree$fit)"
  },
  {
    "objectID": "tidytuesday/cia_factbook.html",
    "href": "tidytuesday/cia_factbook.html",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "",
    "text": "Under the mentorship of Professor Jo Hardin @hardin47 at Pomona College. Analysis based on @deepdk"
  },
  {
    "objectID": "tidytuesday/cia_factbook.html#loading-relevant-libraries",
    "href": "tidytuesday/cia_factbook.html#loading-relevant-libraries",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Loading relevant libraries",
    "text": "Loading relevant libraries\n\nlibrary(tidyverse)"
  },
  {
    "objectID": "tidytuesday/cia_factbook.html#loading-the-data",
    "href": "tidytuesday/cia_factbook.html#loading-the-data",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Loading the data",
    "text": "Loading the data\n\ncia &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-10-22/cia_factbook.csv') |&gt; \n    mutate(\n    iso_a3 = countrycode::countrycode(\n      country,\n      origin = \"country.name\",\n      destination = \"iso3c\"\n    )) |&gt; \n  drop_na(iso_a3)"
  },
  {
    "objectID": "tidytuesday/cia_factbook.html#world-map",
    "href": "tidytuesday/cia_factbook.html#world-map",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "World map",
    "text": "World map\n\nworld_data &lt;- map_data(\"world\") |&gt; \n  mutate(\n      iso_a3 = countrycode::countrycode(\n      region,\n      origin = \"country.name\",\n      destination = \"iso3c\")) |&gt; \n  drop_na(iso_a3)\n\ndata4map &lt;- world_data |&gt; \n  left_join(cia, by = \"iso_a3\")"
  },
  {
    "objectID": "tidytuesday/cia_factbook.html#make-a-single-plot",
    "href": "tidytuesday/cia_factbook.html#make-a-single-plot",
    "title": "Creating a Word Map With Custom Shapes",
    "section": "Make a single plot",
    "text": "Make a single plot\n\ndata4map |&gt; \n  ggplot(aes(x = long, y = lat, group = group)) +\n  geom_polygon(aes(fill = infant_mortality_rate)) +\n  theme_void()"
  },
  {
    "objectID": "projects/simulation_study/permutation_experiment.html",
    "href": "projects/simulation_study/permutation_experiment.html",
    "title": "Campus Room Draw Permutation",
    "section": "",
    "text": "Photo by Ryan Jacobson on Unsplash"
  },
  {
    "objectID": "projects/simulation_study/permutation_experiment.html#helping-functions",
    "href": "projects/simulation_study/permutation_experiment.html#helping-functions",
    "title": "Campus Room Draw Permutation",
    "section": "Helping Functions",
    "text": "Helping Functions\nroom_pref generates a list of preferred room types for each individual.\n\nroom_pref &lt;- function(red_p, blue_p, green_p) {\n  dorms &lt;- c(\"red\", \"blue\", \"green\")\n  prob &lt;- c(red_p, blue_p, green_p)\n  sample(dorms, size = 3, replace = FALSE, prob = prob)\n}\n\nroom_assign_helper assists the room_assignment function and is specifically designed to check whether an individual’s room preference can be accommodated based on the current occupancy of rooms.\n\nroom_assign_helper &lt;- function(color_pref, room_occ, r_rooms, b_rooms, g_rooms) {\n  # Assigning occupancy\n  r_occ &lt;- room_occ[[1]]\n  b_occ &lt;- room_occ[[2]]\n  g_occ &lt;- room_occ[[3]]\n\n  if (color_pref == \"red\") {\n    if (r_rooms &lt; r_occ) {\n      return(\"red\")\n    } else {\n      return(\"no\")\n    }\n  }\n  \n  if (color_pref == \"blue\") {\n    if (b_rooms &lt; b_occ) {\n      return(\"blue\")\n    } else {\n      return(\"no\")\n    }\n  }\n  \n  if (color_pref == \"green\") {\n    if (g_rooms &lt; g_occ) {\n      return(\"green\")\n    } else {\n      return(\"no\")\n    }\n  }\n}\n\nroom_assignment iterates through each of an individual’s preferences until they are assigned to a room.\n\nroom_assignment &lt;- function(pref_order, room_occ, r_rooms, b_rooms, g_rooms) {\n  \n  first_pref &lt;- room_assign_helper(pref_order[[1]], room_occ, r_rooms, b_rooms, g_rooms)\n  \n  if  (first_pref != \"no\") {\n    return(first_pref)\n  }\n  \n  secon_pref &lt;- room_assign_helper(pref_order[[2]], room_occ, r_rooms, b_rooms, g_rooms)\n  if  (secon_pref != \"no\") {\n    return(secon_pref)\n  } \n  \n  third_pref &lt;- room_assign_helper(pref_order[[3]], room_occ, r_rooms, b_rooms, g_rooms)\n  if  (third_pref != \"no\") {\n    return(third_pref)\n  } \n    \n}\n\nmy_room simulates a single room draw, where I am assigned to a room. It assigns people to rooms until my turn, then assigns me to my preferred room that is still available. Finally, it returns the room I am assigned to.\n\nmy_room &lt;- function(lottery_num, pref_probs, room_occ) {\n  r_rooms &lt;- 0\n  b_rooms &lt;- 0\n  g_rooms &lt;- 0\n  room_list &lt;- map(1:lottery_num, function(num) {\n    \n    if (num == lottery_num) {\n      return(room_assignment(c(\"red\", \"blue\", \"green\"), room_occ, r_rooms, b_rooms, g_rooms))\n    }\n    \n    pref_order &lt;- room_pref(pref_probs[[1]], pref_probs[[2]], pref_probs[[3]])\n    room &lt;- room_assignment(pref_order, room_occ, r_rooms, b_rooms, g_rooms)\n    if (room == \"red\") {\n      r_rooms &lt;&lt;- r_rooms + 1\n      return(\"F\")\n    }\n    if (room == \"blue\") {\n      b_rooms &lt;&lt;- b_rooms + 1\n      return(\"F\")\n    }\n    if (room == \"green\") {\n      g_rooms &lt;&lt;- g_rooms + 1\n      return(\"F\")\n    }\n  })\n  return(room_list[[lottery_num]])\n}\n\nThis function is designed solely to facilitate finding the proportions of a list, making it easier to create a tibble of the proportions for each draw.\n\n# Define the function to calculate proportion\ncalculate_proportion &lt;- function(input_list, value) {\n  # Calculate the proportion of 'value' in 'input_list'\n  prop &lt;- sum(input_list == value) / length(input_list)\n  return(prop)\n}\n\nThe room_draws function will be the one we ultimately work with. It returns a tibble showing the proportion of assigned dorm colors based on the number of draws.\n\nroom_draws &lt;- function(draws, pref_probs, room_occ, type = \"single\") {\n\n  room_given &lt;- map(1:draws, function(draw) {\n      if (type == \"single\") {\n        lottery_num = sample(1:sum(room_occ), 1, replace = FALSE)\n      } else if (type == \"worse_num\") {\n        lottery_num &lt;- max(sample(1:sum(room_occ), 2, replace = FALSE))\n      } else if (type == \"best_num\") {\n        lottery_num &lt;- min(sample(1:sum(room_occ), 2, replace = FALSE))\n      }\n      my_room(lottery_num, pref_probs, room_occ) \n    }\n  ) |&gt; \n    unlist()\n  tibble(\n    draws = c(draws),\n    red = c(calculate_proportion(room_given, \"red\")),\n    blue = c(calculate_proportion(room_given, \"blue\")),\n    green = c(calculate_proportion(room_given, \"green\"))\n  )\n}"
  },
  {
    "objectID": "projects/simulation_study/permutation_experiment.html#data-preparation",
    "href": "projects/simulation_study/permutation_experiment.html#data-preparation",
    "title": "Campus Room Draw Permutation",
    "section": "Data Preparation",
    "text": "Data Preparation\nWe can now use our function to generate a dataset based on the experiment we are interested in. The function could also be applied to explore various scenarios, such as how the outcome might change if you wanted to live with someone and were willing to accept a worse room in order to be with them, or if partnering with them would allow you to secure a higher room number. However, for simplicity, we will focus on the scenario where I am considered as an individual in the room draw (commented-out code can be used to explore the other scenarios).\nBy calculating the average of the proportions across the dataset, we can determine that the probability of getting a red room is 50%, a green room is 30%, and a blue room is 20%.\n\nset.seed(47)\n\npref_probs &lt;- c(0.6, 0.3, 0.1)\nroom_occ &lt;- c(30, 30, 40)\ndraws &lt;- 200\n\n\ntype &lt;- \"single\"\n\nsingle_data &lt;- map(1:draws, room_draws, pref_probs, room_occ, type) |&gt; \n  bind_rows() |&gt; \n  pivot_longer(\n    cols = red:green,\n    names_to = \"room\",\n    values_to = \"proportion\")\n\n# type &lt;- \"worse_num\"\n# \n# worst_data &lt;- map(1:draws, room_draws, pref_probs, room_occ, type) |&gt; \n#   bind_rows() |&gt; \n#   pivot_longer(\n#     cols = red:green,\n#     names_to = \"room\",\n#     values_to = \"proportion\")\n# \n# type &lt;- \"best_num\"\n# \n# best_data &lt;- map(1:draws, room_draws, pref_probs, room_occ, type) |&gt; \n#   bind_rows() |&gt; \n#   pivot_longer(\n#     cols = red:green,\n#     names_to = \"room\",\n#     values_to = \"proportion\")\n\nsingle_data |&gt; \n  group_by(room) |&gt; \n  summarize(avg_prop = mean(proportion))\n\n# A tibble: 3 × 2\n  room  avg_prop\n  &lt;chr&gt;    &lt;dbl&gt;\n1 blue     0.197\n2 green    0.301\n3 red      0.502"
  },
  {
    "objectID": "projects/simulation_study/permutation_experiment.html#plotting",
    "href": "projects/simulation_study/permutation_experiment.html#plotting",
    "title": "Campus Room Draw Permutation",
    "section": "Plotting",
    "text": "Plotting\nThis plot visualizes the proportion of each room color (Red, Blue, Green) assigned as the number of draws increases. It shows the trend of room assignments over time, with different colors representing each room type.\n\npallete &lt;- c(\"Red Room\" = \"#e74c3c\", \"Blue Room\" = \"#3498db\", \"Green Room\" = \"#2ecc71\")\n\nsingle_data |&gt; \n  ggplot(aes(x = draws, y = proportion, color = case_when(\n      room == \"red\" ~ \"Red Room\",\n      room == \"blue\" ~ \"Blue Room\",\n      room == \"green\" ~ \"Green Room\"\n  ))) +\n  geom_point(alpha = 0.2) +\n  geom_smooth() +\n  labs(color = \"Room Color\",\n       x = \"Number of Draws\",\n       y = \"Proportion of Room Assignments\",\n       title = \"Proportion of Room Colors Assigned To Me by Number of Draws\",\n       subtitle = \"Shows how the proportion of each room color changes as more draws are made\") +\n  scale_color_manual(values = pallete) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nAs we increase the number of room draws, the proportions tend to stabilize around certain values. Therefore, we can expect the probability of getting a red room to be around 50%, a green room around 30%, and a blue room around 20%."
  },
  {
    "objectID": "tidytuesday/country_code.html",
    "href": "tidytuesday/country_code.html",
    "title": "Country Codes",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(plotly)\n\n\ncountries &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/countries.csv')\ncountry_subdivisions &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/country_subdivisions.csv')\nformer_countries &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-12/former_countries.csv')\n\n\nformer &lt;- former_countries |&gt; \n  mutate(date = case_when(\n    nchar(date_withdrawn) == 4 ~ ymd(paste0(date_withdrawn, \"-01-01\")),\n    TRUE ~ ymd(date_withdrawn))) |&gt; \n  mutate(yval = sample(5:20, nrow(former_countries), replace = TRUE)) |&gt; \n  arrange(date) |&gt; \n  mutate(decade = as.character((((year(date) %% 100)) %/% 10) * 10)) |&gt; \n  mutate(decade = case_when(decade == \"0\" ~ \"00\",\n                            TRUE ~ decade)) |&gt; \n  mutate(decade = factor(decade, levels = c(\"70\", \"80\", \"90\", \"00\", \"10\", \"20\"))) |&gt; \n  mutate(name = paste0(year(date), \": \", name))\n\n\n# Define custom colors for each decade\ndecade_colors &lt;- c(\"70\" = \"#1f3a6c\", \n                   \"80\" = \"#6a1b9a\", \n                   \"90\" = \"#e53946\", \n                   \"00\" = \"#f57c00\", \n                   \"10\" = \"#43a047\", \n                   \"20\" = \"#00897b\")\n\n# Reorder `name` by `date`\nformer &lt;- former |&gt; \n  mutate(alpha_3 = fct_reorder(alpha_3, date))\n\n# Create the plot\np &lt;- former |&gt; \n  ggplot(aes(x = alpha_3, y = date)) +\n  geom_segment(aes(xend = alpha_3, yend = min(date), color = decade)) +\n  geom_point(aes(text = name, color = decade), size = 4) +\n  scale_color_manual(values = decade_colors) +  # Apply custom color palette\n  theme_minimal() +\n  labs(title = \"Interactive Lollipop Plot\", x = \"Country\", y = \"Date\") +\n  coord_flip()\n\n# Make it interactive\nggplotly(p, tooltip = \"text\")"
  },
  {
    "objectID": "projects/mex_peso/Sin título.html",
    "href": "projects/mex_peso/Sin título.html",
    "title": "thing",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lubridate)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(htmlwidgets)\n\n\nexchange &lt;- read.csv(\"exrate.csv\") |&gt; \n  mutate(FIX = as.numeric(FIX)) |&gt; \n  filter(!is.na(FIX)) |&gt; \n  select(exchange = FIX, date = Date) |&gt; \n  mutate(date = mdy(date))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `FIX = as.numeric(FIX)`.\nCaused by warning:\n! NAs introduced by coercion\n\n\n\n# Filter the data to start from 1993\nexchange &lt;- exchange[exchange$date &gt;= as.Date(\"1993-01-01\"), ]\n\n# Create the plot using Plotly\np &lt;- plot_ly(\n  data = exchange, \n  x = ~date, \n  y = ~exchange, \n  type = 'scatter', \n  mode = 'lines',\n  text = ~paste(\"Date: \", \n                format(date, \"%B %d, %Y\"), \n                \"&lt;br&gt;Exchange Rate: \", \n                exchange), \n  hoverinfo = 'text')\n\n\n# Add transparent scatter traces for red regions with descriptive text\np &lt;- p %&gt;%\n  add_trace(\n    x = c(as.Date(\"2014-08-01\"), as.Date(\"2017-03-01\")),\n    y = c(12.5, 12.5),\n    type = \"scatter\",\n    mode = \"markers\",\n    marker = list(opacity = 0, size = 1),  # Fully transparent marker\n    text = \"Economic slowdown due to global factors\",\n    hoverinfo = \"text\",\n    showlegend = FALSE  # Hide legend for this trace\n  ) %&gt;%\n  add_trace(\n    x = c(as.Date(\"1994-01-01\"), as.Date(\"1996-01-01\")),\n    y = c(12.5, 12.5),\n    type = \"scatter\",\n    mode = \"markers\",\n    marker = list(opacity = 0, size = 1),\n    text = \"Currency crisis and market instability\",\n    hoverinfo = \"text\",\n    showlegend = FALSE  # Hide legend for this trace\n  ) %&gt;%\n  add_trace(\n    x = c(as.Date(\"2008-01-01\"), as.Date(\"2009-07-01\")),\n    y = c(12.5, 12.5),\n    type = \"scatter\",\n    mode = \"markers\",\n    marker = list(opacity = 0, size = 1),\n    text = \"Global financial crisis\",\n    hoverinfo = \"text\",\n    showlegend = FALSE  # Hide legend for this trace\n  ) %&gt;%\n  add_trace(\n    x = c(as.Date(\"2020-01-01\"), as.Date(\"2021-01-01\")),\n    y = c(12.5, 12.5),\n    type = \"scatter\",\n    mode = \"markers\",\n    marker = list(opacity = 0, size = 1),\n    text = \"COVID-19 pandemic impact\",\n    hoverinfo = \"text\",\n    showlegend = FALSE  # Hide legend for this trace\n  ) %&gt;%\n  add_trace(\n    x = c(as.Date(\"2024-05-01\"), as.Date(\"2024-11-22\")),\n    y = c(12.5, 12.5),\n    type = \"scatter\",\n    mode = \"markers\",\n    marker = list(opacity = 0, size = 1),\n    text = \"Projected market uncertainty\",\n    hoverinfo = \"text\",\n    showlegend = FALSE  # Hide legend for this trace\n  )\n\n# Add shapes for red regions\np &lt;- p %&gt;%\n  layout(\n    title = \"Exchange Rate Over Time (1993-2024)\",\n    xaxis = list(\n      title = \"Date\",\n      tickformat = \"%Y\",  # Format x-axis as year\n      tickangle = 45,  # Rotate x-axis labels\n      dtick = \"M12\",  # Tick every 12 months\n      showgrid = TRUE\n    ),\n    yaxis = list(\n      title = \"Exchange Rate\",\n      tickvals = seq(1, 25, by = 1),  # Custom y-axis ticks\n      showgrid = TRUE,\n      range = c(0, 25)  # Set the y-axis range\n    ),\n    shapes = list(\n      list(\n        type = \"rect\", \n        x0 = as.Date(\"2014-08-01\"), x1 = as.Date(\"2017-03-01\"),\n        y0 = 0, y1 = 25,  \n        fillcolor = \"red\", opacity = 0.2, line = list(width = 0), layer = \"below\"\n      ),\n      list(\n        type = \"rect\", \n        x0 = as.Date(\"1994-01-01\"), x1 = as.Date(\"1996-01-01\"),\n        y0 = 0, y1 = 25,  \n        fillcolor = \"red\", opacity = 0.2, line = list(width = 0), layer = \"below\"\n      ),\n      list(\n        type = \"rect\", \n        x0 = as.Date(\"2008-01-01\"), x1 = as.Date(\"2009-07-01\"),\n        y0 = 0, y1 = 25,  \n        fillcolor = \"red\", opacity = 0.2, line = list(width = 0), layer = \"below\"\n      ),\n      list(\n        type = \"rect\", \n        x0 = as.Date(\"2020-01-01\"), x1 = as.Date(\"2021-01-01\"),\n        y0 = 0, y1 = 25,  \n        fillcolor = \"red\", opacity = 0.2, line = list(width = 0), layer = \"below\"\n      ),\n      list(\n        type = \"rect\", \n        x0 = as.Date(\"2024-05-01\"), x1 = as.Date(\"2024-11-22\"),\n        y0 = 0, y1 = 25,  \n        fillcolor = \"red\", opacity = 0.2, line = list(width = 0), layer = \"below\"\n      )\n    ),\n    hovermode = \"x unified\"  # Enable hovermode along the x-axis\n  )\n\n# Render the plot\np"
  },
  {
    "objectID": "projects/sql_mini_project/sql_project.html",
    "href": "projects/sql_mini_project/sql_project.html",
    "title": "SQL Mini Project",
    "section": "",
    "text": "library(tidyverse)\nlibrary(RMariaDB)\ncon_wai &lt;- dbConnect(\n  MariaDB(), host = \"scidb.smith.edu\",\n  user = \"waiuser\", password = \"smith_waiDB\", \n  dbname = \"wai\"\n)\nMeasurements &lt;- tbl(con_wai, \"Measurements\")\nPI_Info &lt;- tbl(con_wai, \"PI_Info\")\nSubjects &lt;- tbl(con_wai, \"Subjects\")\n\n# collect(Measurements)\n\n\nSHOW TABLES;\n\n\n7 records\n\n\nTables_in_wai\n\n\n\n\nCodebook\n\n\nMeasurements\n\n\nMeasurements_pre2020\n\n\nPI_Info\n\n\nPI_Info_OLD\n\n\nSubjects\n\n\nSubjects_pre2020\n\n\n\n\n\n\nDESCRIBE Measurements;\n\n\nDisplaying records 1 - 10\n\n\nField\nType\nNull\nKey\nDefault\nExtra\n\n\n\n\nIdentifier\nvarchar(50)\nNO\nPRI\nNA\n\n\n\nSubjectNumber\nint\nNO\nPRI\nNA\n\n\n\nSession\nint\nNO\nPRI\nNA\n\n\n\nEar\nvarchar(50)\nNO\nPRI\n\n\n\n\nInstrument\nvarchar(50)\nNO\nPRI\n\n\n\n\nAge\nfloat\nYES\n\nNA\n\n\n\nAgeCategory\nvarchar(50)\nYES\n\nNA\n\n\n\nEarStatus\nvarchar(50)\nYES\n\nNA\n\n\n\nTPP\nfloat\nYES\n\nNA\n\n\n\nAreaCanal\nfloat\nYES\n\nNA\n\n\n\n\n\n\n\nSELECT *\nFROM Measurements\nLIMIT 0, 5;\n\n\n5 records\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIdentifier\nSubjectNumber\nSession\nEar\nInstrument\nAge\nAgeCategory\nEarStatus\nTPP\nAreaCanal\nPressureCanal\nSweepDirection\nFrequency\nAbsorbance\nZmag\nZang\n\n\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n210.938\n0.0333379\n113780000\n-0.233504\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n234.375\n0.0315705\n103585000\n-0.235778\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n257.812\n0.0405751\n92951696\n-0.233482\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n281.250\n0.0438399\n86058000\n-0.233421\n\n\nAbur_2014\n1\n1\nLeft\nHearID\n20\nAdult\nNormal\n-5\n4.42e-05\n0\nAmbient\n304.688\n0.0486400\n79492800\n-0.232931\n\n\n\n\n\n\nquery &lt;- \"\nSELECT \n    Identifier,\n    Frequency,\n    Instrument,\n    AVG(Absorbance) as mean_absorbance\nFROM Measurements\nGROUP BY Identifier, Instrument, Frequency;\n\"\n\navgs &lt;- dbGetQuery(con_wai, query)\n\n\nunique(avgs$Identifier)\n\n [1] \"Abur_2014\"      \"Aithal_2013\"    \"Aithal_2014\"    \"Aithal_2014b\"  \n [5] \"Aithal_2015\"    \"Aithal_2017a\"   \"Aithal_2017b\"   \"Aithal_2019a\"  \n [9] \"Aithal_2019b\"   \"Aithal_2020a\"   \"Aithal_2020b\"   \"Aithal_2022\"   \n[13] \"AlMakadma_2021\" \"Downing_2022\"   \"Ellison_2012\"   \"Feeney_2017\"   \n[17] \"Groon_2015\"     \"Hunter_2016\"    \"Keefe_2003\"     \"Keefe_2012\"    \n[21] \"Keefe_2017\"     \"Lewis_2015\"     \"Lewis_2018\"     \"Liu_2008\"      \n[25] \"Merchant_2010\"  \"Merchant_2015\"  \"Merchant_2020\"  \"Merchant_2021\" \n[29] \"Myers_2018\"     \"Nakajima_2012\"  \"Pitaro_2016\"    \"Rosowski_2012\" \n[33] \"Sanford_2009\"   \"Sanford_2014\"   \"Shahnaz_2006\"   \"Shaver_2013\"   \n[37] \"Sliwa_2020\"     \"Sun_2016\"       \"Sun_2023\"       \"Voss_1994\"     \n[41] \"Voss_2010\"      \"Voss_2016\"      \"Werner_2010\"   \n\n\n\ncustom_colors &lt;- c(\n  \"#5C4E9E\",  # For \"Abur_2014\"\n  \"#387BBC\",  # For \"Feeney_2017\"\n  \"#5FB8A9\",  # For \"Groon_2015\"\n  \"#99D59F\",  # For \"Lewis_2015\"\n  \"#D9F0A7\",  # For \"Liu_2008\"\n  \"#ECF5AF\",  # For \"Rosowski_2012\"\n  \"#F7EEAF\",  # For \"Shahnaz_2006\"\n  \"#F8D37E\",  # For \"Shaver_2013\"\n  \"#EC9D57\",  # For \"Sun_2016\"\n  \"#E46647\",  # For \"Voss_1994\"\n  \"#C9384D\",  # For \"Voss_2010\"\n  \"#9C2045\"   # For \"Werner_2010\"\n)\n\navgs |&gt; \n  filter(Identifier %in% c(\"Abur_2014\",\n                           \"Feeney_2017\",\n                           \"Groon_2015\",\n                           \"Lewis_2015\",\n                           \"Liu_2008\",\n                           \"Rosowski_2012\",\n                           \"Shahnaz_2006\",\n                           \"Shaver_2013\",\n                           \"Sun_2016\",\n                           \"Voss_1994\",\n                           \"Voss_2010\",\n                           \"Werner_2010\"),\n         Frequency &lt;= 8000 & Frequency &gt;= 200) |&gt; \n  ggplot(aes(x = Frequency, y = mean_absorbance, color = Identifier)) +\n  geom_line(size = 1) +\n  scale_x_continuous(\n    trans = \"log10\",               # Apply logarithmic transformation\n    breaks = c(200, 400, 600, 800, 1000, 2000, 4000, 6000, 8000), # Custom breaks\n    labels = scales::label_number() # Keep original units\n  ) +\n  scale_color_manual(values = custom_colors) +\n  labs(\n    x = \"Frequency (Hz)\", # Updated axis label\n    y = \"Mean Absorbance\"\n  )"
  },
  {
    "objectID": "projects/mex_peso/mexican_peso.html",
    "href": "projects/mex_peso/mexican_peso.html",
    "title": "The Mexican Peso",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\n\n\nexchange &lt;- read.csv(\"exrate.csv\") |&gt; \n  mutate(FIX = as.numeric(FIX)) |&gt; \n  filter(!is.na(FIX)) |&gt; \n  select(exchange = FIX, date = Date) |&gt; \n  mutate(date = mdy(date))\n\n\nexchange |&gt; \n  ggplot(aes(x = date, y = exchange)) +\n  geom_rect(\n    aes( xmin = as.Date(\"2014-08-01\"), xmax = as.Date(\"2017-03-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"1994-01-01\"), xmax = as.Date(\"1996-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"1994-01-01\"), xmax = as.Date(\"1996-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2008-01-01\"), xmax = as.Date(\"2009-07-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2020-01-01\"), xmax = as.Date(\"2021-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2024-05-01\"), xmax = as.Date(\"2024-11-22\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_line() +  \n  labs( x = \"Date\",\n        y = \"Exchange Rate\",\n        title = \"Exchange Rate Over Time (2010-2024)\") +\n  scale_x_date(\n    breaks = seq(from = min(peso_dlr$date), \n                 to = max(peso_dlr$date), \n                 by = \"1 year\"),\n    labels = scales::date_format(\"%Y\")) +\n  scale_y_continuous(breaks = seq(1, 25, by = 1)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\nlibrary(ggplot2)\nlibrary(plotly)\n\n# Data example (replace with your actual data)\npeso_dlr &lt;- data.frame(\n  date = seq(as.Date(\"1990-01-01\"), as.Date(\"2024-11-22\"), by = \"months\"),\n  exchange = cumsum(rnorm(419, mean = 0.1, sd = 0.5)) + 10\n)\n\n# Define red periods with annotations\nred_periods &lt;- data.frame(\n  start = as.Date(c(\"1994-01-01\", \"2008-01-01\", \"2014-08-01\", \"2020-01-01\", \"2024-05-01\")),\n  end = as.Date(c(\"1996-01-01\", \"2009-07-01\", \"2017-03-01\", \"2021-01-01\", \"2024-11-22\")),\n  label = c(\"Tequila Crisis\", \n            \"Global Financial Crisis\", \n            \"NAFTA Renegotiation Concerns and US Election\", \n            \"COVID-19 Pandemic\", \n            \"US Presidential Election Year\")\n)\n\n# Create the ggplot\np &lt;- ggplot(peso_dlr, aes(x = date, y = exchange)) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_rect(data = red_periods, aes(\n    xmin = start, xmax = end, ymin = -Inf, ymax = Inf),\n    fill = \"red\", alpha = 0.1, inherit.aes = FALSE\n  ) +\n  geom_text(data = red_periods, aes(\n    x = (start + end) / 2, y = max(peso_dlr$exchange), label = label),\n    color = \"darkred\", size = 3, angle = 45, inherit.aes = FALSE\n  ) +\n  labs(\n    title = \"Exchange Rate Over Time (1990-2024)\",\n    x = \"Date\",\n    y = \"Exchange Rate (MXN/USD)\"\n  ) +\n  scale_x_date(date_breaks = \"2 years\", date_labels = \"%Y\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Convert to plotly for interactivity\ninteractive_plot &lt;- ggplotly(p)\n\n# Display the interactive plot\ninteractive_plot\n\n\nexchange |&gt; \n  ggplot(aes(x = date, y = exchange)) +\n  geom_rect(\n    aes( xmin = as.Date(\"2014-08-01\"), xmax = as.Date(\"2017-03-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"1994-01-01\"), xmax = as.Date(\"1996-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"1994-01-01\"), xmax = as.Date(\"1996-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2008-01-01\"), xmax = as.Date(\"2009-07-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2020-01-01\"), xmax = as.Date(\"2021-01-01\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_rect(\n  aes( xmin = as.Date(\"2024-05-01\"), xmax = as.Date(\"2024-11-22\"),\n         ymin = -Inf, ymax = Inf),\n         fill = \"red\", alpha = 0.002) +\n  geom_line() +  \n  labs( x = \"Date\",\n        y = \"Exchange Rate\",\n        title = \"Exchange Rate Over Time (2010-2024)\") +\n  scale_x_date(\n    breaks = seq(from = min(peso_dlr$date), \n                 to = max(peso_dlr$date), \n                 by = \"1 year\"),\n    labels = scales::date_format(\"%Y\")) +\n  scale_y_continuous(breaks = seq(1, 25, by = 1)) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\npeso_dlr &lt;- read.csv(\"peso_dlr.csv\") |&gt; \n  rename(\"date\" = \"DATE\",\n         \"exchange_rate\" = \"DEXMXUS\") |&gt; \n  mutate(exchange_rate = as.numeric(exchange_rate),\n         date = ymd(date))\n\ninflation &lt;- read.csv(\"inflation_data.csv\") |&gt; \n  mutate(date = ymd(paste0(period, \"/01\"))) |&gt; \n  filter(!is.na(date)) |&gt; \n  select(-period)\n\nmerge &lt;- merge(peso_dlr, inflation, by = \"date\")\n\n\npeso_dlr |&gt; \n  filter(date &gt; as.Date(\"2010-01-01\")) |&gt; \n  ggplot(aes(x = date, y = exchange_rate)) +\n  geom_rect(\n    aes(\n      xmin = as.Date(\"2014-08-01\"), xmax = as.Date(\"2017-03-01\"),\n      ymin = -Inf, ymax = Inf  # This will cover the full range of the y-axis\n    ),\n    fill = \"red\", alpha = 0.002  # Adjust alpha for better visibility\n  ) +\n  geom_line() +  # Add line plot for exchange rates\n  labs(\n    x = \"Date\",\n    y = \"Exchange Rate\",\n    title = \"Exchange Rate Over Time (2010-2024)\"\n  ) +\n  scale_x_date(\n    breaks = seq(from = min(peso_dlr$date), to = max(peso_dlr$date), by = \"1 year\"),\n    labels = scales::date_format(\"%Y\")  # Display years only\n  ) +\n  scale_y_continuous(\n    breaks = seq(5, 25, by = 1)  # Adjust y-axis ticks\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1)  # Tilt x-axis labels 45 degrees\n  )\n\n\ninflation |&gt; \n  ggplot(aes(date, inflation)) +\n  geom_line() +\n  labs(x = \"Date\",\n       y = \"Inflation\") +\n  theme_minimal()"
  },
  {
    "objectID": "projects/peso/peso.html",
    "href": "projects/peso/peso.html",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "",
    "text": "The chart above shows the MXN peso to USD exchange rate since 1993. Highlighted areas represent periods of peso devaluation relative to the dollar. As the U.S. is Mexico’s largest trading partner, this exchange rate is crucial to Mexico’s economy and broader economic plans. The orange zones indicate global economic instability, such as the 2008 financial crisis and the 2020 COVID-19 pandemic. In contrast, the red zones highlight devaluations unique to Mexico, which are the focus of this article."
  },
  {
    "objectID": "projects/peso/peso.html#peso-crisis-1994---1996",
    "href": "projects/peso/peso.html#peso-crisis-1994---1996",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Peso Crisis (1994 - 1996)",
    "text": "Peso Crisis (1994 - 1996)\n\n\n\n\n\n\n\n\n\nSource: Banco de México\nThe Mexican Peso Crisis involved a dramatic devaluation of the Mexican peso, which fell from 3 pesos per USD to 6 pesos per USD, effectively losing half its value. Before the crisis, Mexico had attempted to maintain a peg to the USD, allowing the peso to fluctuate within a specific range. However, this seemingly stable peg collapsed in December when the government finally allowed the peso to devalue, triggering a series of economic and political challenges. Below, we will explore some of the most significant political and economic factors during this period.\n\nAssasinaitons & A Violent Mobilization\nNumerous destabilizing events occurred in 1994. I particularly appreciate the title of the El País article, “México 1994: el año que pasó todo” (“The Year Everything Happened”). For brevity, I will focus on two key political factors that stressed the exchange rate and contributed to the December crisis: high-profile political assassinations and the eruption of the Zapatista movement.\nFirst, to understand the assassinations and their impact, some context is necessary. Mexico’s dominant political party, the PRI (Institutional Revolutionary Party), had controlled the country since the 1930s, effectively creating a one-party system. However, by the 1990s, the PRI’s grip on power was weakening, culminating in the election of the first non-PRI president in 2000. \nPhoto by Infobae\nAt the time, sitting presidents selected their successors to run as the PRI’s presidential candidate. Luis Donaldo Colosio, chosen by President Salinas de Gortari, was widely expected to reform the party from within. However, on March 23, Colosio was assassinated in Tijuana, triggering a chaotic scramble to find a replacement just months before the election.\nThis process was complicated by the Mexican Constitution, which prohibits individuals holding high office within the previous six months from running for president. Despite this, Ernesto Zedillo was selected as the new PRI candidate and later oversaw the peso devaluation in December.\nThe instability deepened when, on September 28, José Francisco Ruiz Massieu, the PRI’s general secretary—a position wielding significant influence over the party and national politics—was also assassinated.\nWhile neither Colosio nor Ruiz Massieu held active government roles at the time, their positions at the helm of the PRI were crucial. These events shook confidence in a party already under pressure from increasingly competitive smaller parties.\nStable political regimes are essential for fostering predictable economic environments. For decades, the PRI had artificially maintained political stability, but by 1994, this stability was unraveling. The assassinations signaled threats to political order, unsettling markets. Although the PRI sought to reassure markets by swiftly transitioning to a new presidential candidate, this effort added pressure to an already fragile system, setting the stage for the December economic crisis.\nPhoto by Eduardo Verdugo for The AP\nSecond, it is crucial to note that NAFTA (the North American Free Trade Agreement) came into effect on January 1, 1994. This agreement brought great optimism about Mexico’s economic potential, encouraging investors to view the country as a promising destination for economic activity. This renewed attention increased demand for the peso.\nHowever, on the same day, January 1, 1994, the Zapatista movement emerged on the national stage. Composed primarily of indigenous militias from Chiapas, the movement opposed the government’s economic liberalization policies, including NAFTA, which they believed marginalized their communities and threatened their traditional way of life. This resistance raised concerns about the stability of Mexico’s economic trajectory.\nThe Zapatista uprising involved violent confrontations, with over a hundred fatalities in the initial clashes, casting doubt in investors’ minds about Mexico’s ability to sustain economic growth without significant disruption. The government faced pressure to crack down on the movement, which it did, but this heavy-handed response underscored the resistance to investor-friendly reforms.\nThis opposition to economic liberalization, coupled with violence and unrest, created uncertainty about the viability of Mexico’s economic policies. It also increased pressure on the peso peg, a cornerstone of the government’s economic strategy, contributing to the strain that ultimately led to the December crisis.\n\n\nThe Tesobonos and Economic Factors\nTo understand the Peso Crisis, one key factor is the role of tesobonos. These were short-term bonds with a fixed exchange rate, payable in USD. They offered investors the dual benefit of currency stability and higher interest rates than U.S. bonds. By linking returns to USD, the Mexican government aimed to attract foreign investors and inspire confidence amid political instability. At the same time, this strategy aligned with Mexico’s economic goals under NAFTA and its push for more open trade policies.\nWith the peso pegged to the U.S. dollar, it became overvalued over time, making trade more expensive and requiring increasingly large amounts of foreign reserves to maintain the peg. The loss of the peg, or the solution that was eventually used—allowing the peso to float freely against the dollar—was necessary to ease the pressure on imports and the central bank. However, since it was an election year, and with growing political competition, the PRI (Institutional Revolutionary Party) wanted to avoid changing the currency until after the elections. Once Ernesto Zedillo took office, he faced mounting pressure from the peso’s overvaluation and finally allowed the peso to float. This decision, however, led to a sharp depreciation of the peso, as investors panicked and sold off their holdings.\n\n\n\n\n\n\nSource: The World Bank\nIt’s important to remember the nature of tesobonos, which were government-issued debt instruments with a fixed exchange rate and were promised to be paid out in U.S. dollars. As the value of the debt exceeded the value of Mexico’s foreign reserves, investors began to worry about Mexico’s ability to repay the loans. The graph above illustrates the dramatic decline in the ratio of Mexico’s total reserves to foreign debt. As a result, investors began to offload their Mexican assets, contributing to the peso losing half of its value.\nThe government needed to allow the peso to depreciate to ease pressure on foreign reserves and make Mexican exports more competitive, which could help address the current account deficit. However, the Zedillo administration could not reassure investors that it could sustain the peso’s depreciation due to the structure of tesobonos, whose value could exceed Mexico’s foreign reserves, risking default. This loss of investor confidence further devalued the peso and raised doubts about Mexico’s ability to meet its obligations."
  },
  {
    "objectID": "projects/peso/peso.html#recession",
    "href": "projects/peso/peso.html#recession",
    "title": "30 Years of the Mexican Peso: History & Opportunities",
    "section": "2008 Recession",
    "text": "2008 Recession\nPlace Holder"
  },
  {
    "objectID": "projects/peso/peso.html#economic-slowdown-trump",
    "href": "projects/peso/peso.html#economic-slowdown-trump",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Economic Slowdown & Trump",
    "text": "Economic Slowdown & Trump\n\n\n\n\n\n\n\n\n\nSource: Banco de México\nBetween mid-2014 and early 2017, the peso experienced a steady devaluation against the USD, starting at around 13 pesos per US dollar and ending at 20 pesos. This represented a devaluation of 53.9%. Several factors contributed to this decline, both economic, such as fluctuations in gas prices, and political, including the 2016 U.S. presidential election and the victory of Donald Trump. In this discussion, we will explore some of the key factors behind this devaluation.\n\nOil Prices & Economic Uncertainty\n\n\n\n\n\n\nSource: Statista\nOil prices have been rising dramatically since the turn of the century, as evidenced by OPEC oil prices. The only significant dip occurred during the Great Recession, but prices quickly recovered, reaching new heights in 2012, when the average annual cost of a barrel of oil exceeded $109. However, just four years later, the price plummeted to less than $41, resulting in a loss of more than half its value.\nWhat does this means for Mexico, who has very large oil and gas sectors? The oil indiustry in Mexico in nationalieze by the government adn serves as government revenue.It meant an unprecedtned plumment that would devalue a great part of Mexico’s GDP.\n\n\n\n\n\n\nSource: Statista"
  },
  {
    "objectID": "projects/peso/peso.html#covid-19-pandemic",
    "href": "projects/peso/peso.html#covid-19-pandemic",
    "title": "30 Years of the Mexican Peso: History & Opportunities",
    "section": "Covid-19 Pandemic",
    "text": "Covid-19 Pandemic\nPlace Holder"
  },
  {
    "objectID": "projects/peso/peso.html#elections",
    "href": "projects/peso/peso.html#elections",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "2024 Elections",
    "text": "2024 Elections\n\n\n\n\n\n\n\n\n\nSource: Banco de México\n\n\n\nChamber Of Deputies\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Senate\n\n\n\n\n\n\n\n\n\n\n\n\nSource: IPU Parline"
  },
  {
    "objectID": "projects/peso/peso.html#chamber-of-deputies",
    "href": "projects/peso/peso.html#chamber-of-deputies",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Chamber Of Deputies",
    "text": "Chamber Of Deputies"
  },
  {
    "objectID": "projects/peso/peso.html#the-senate",
    "href": "projects/peso/peso.html#the-senate",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "The Senate",
    "text": "The Senate"
  },
  {
    "objectID": "projects/peso/peso.html#assasinaitons-a-violent-mobilization",
    "href": "projects/peso/peso.html#assasinaitons-a-violent-mobilization",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Assasinaitons & A Violent Mobilization",
    "text": "Assasinaitons & A Violent Mobilization\nNumerous destabilizing events occurred in 1994. I particularly appreciate the title of the El País article, “México 1994: el año que pasó todo” (“The Year Everything Happened”). For brevity, I will focus on two key political factors that stressed the exchange rate and contributed to the December crisis: high-profile political assassinations and the eruption of the Zapatista movement.\nFirst, to understand the assassinations and their impact, some context is necessary. Mexico’s dominant political party, the PRI (Institutional Revolutionary Party), had controlled the country since the 1930s, effectively creating a one-party system. However, by the 1990s, the PRI’s grip on power was weakening, culminating in the election of the first non-PRI president in 2000. \nPhoto by Infobae\nAt the time, sitting presidents selected their successors to run as the PRI’s presidential candidate. Luis Donaldo Colosio, chosen by President Salinas de Gortari, was widely expected to reform the party from within. However, on March 23, Colosio was assassinated in Tijuana, triggering a chaotic scramble to find a replacement just months before the election.\nThis process was complicated by the Mexican Constitution, which prohibits individuals holding high office within the previous six months from running for president. Despite this, Ernesto Zedillo was selected as the new PRI candidate and later oversaw the peso devaluation in December.\nThe instability deepened when, on September 28, José Francisco Ruiz Massieu, the PRI’s general secretary—a position wielding significant influence over the party and national politics—was also assassinated.\nWhile neither Colosio nor Ruiz Massieu held active government roles at the time, their positions at the helm of the PRI were crucial. These events shook confidence in a party already under pressure from increasingly competitive smaller parties.\nStable political regimes are essential for fostering predictable economic environments. For decades, the PRI had artificially maintained political stability, but by 1994, this stability was unraveling. The assassinations signaled threats to political order, unsettling markets. Although the PRI sought to reassure markets by swiftly transitioning to a new presidential candidate, this effort added pressure to an already fragile system, setting the stage for the December economic crisis.\nPhoto by Eduardo Verdugo for The AP\nSecond, it is crucial to note that NAFTA (the North American Free Trade Agreement) came into effect on January 1, 1994. This agreement brought great optimism about Mexico’s economic potential, encouraging investors to view the country as a promising destination for economic activity. This renewed attention increased demand for the peso.\nHowever, on the same day, January 1, 1994, the Zapatista movement emerged on the national stage. Composed primarily of indigenous militias from Chiapas, the movement opposed the government’s economic liberalization policies, including NAFTA, which they believed marginalized their communities and threatened their traditional way of life. This resistance raised concerns about the stability of Mexico’s economic trajectory.\nThe Zapatista uprising involved violent confrontations, with over a hundred fatalities in the initial clashes, casting doubt in investors’ minds about Mexico’s ability to sustain economic growth without significant disruption. The government faced pressure to crack down on the movement, which it did, but this heavy-handed response underscored the resistance to investor-friendly reforms.\nThis opposition to economic liberalization, coupled with violence and unrest, created uncertainty about the viability of Mexico’s economic policies. It also increased pressure on the peso peg, a cornerstone of the government’s economic strategy, contributing to the strain that ultimately led to the December crisis."
  },
  {
    "objectID": "projects/peso/peso.html#the-tesobonos-and-economic-factors",
    "href": "projects/peso/peso.html#the-tesobonos-and-economic-factors",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "The Tesobonos and Economic Factors",
    "text": "The Tesobonos and Economic Factors\nTo understand the Peso Crisis, one key factor is the role of tesobonos. These were short-term bonds with a fixed exchange rate, payable in USD. They offered investors the dual benefit of currency stability and higher interest rates than U.S. bonds. By linking returns to USD, the Mexican government aimed to attract foreign investors and inspire confidence amid political instability. At the same time, this strategy aligned with Mexico’s economic goals under NAFTA and its push for more open trade policies.\nWith the peso pegged to the U.S. dollar, it became overvalued over time, making trade more expensive and requiring increasingly large amounts of foreign reserves to maintain the peg. The loss of the peg, or the solution that was eventually used—allowing the peso to float freely against the dollar—was necessary to ease the pressure on imports and the central bank. However, since it was an election year, and with growing political competition, the PRI (Institutional Revolutionary Party) wanted to avoid changing the currency until after the elections. Once Ernesto Zedillo took office, he faced mounting pressure from the peso’s overvaluation and finally allowed the peso to float. This decision, however, led to a sharp depreciation of the peso, as investors panicked and sold off their holdings.\n\n\n\n\n\n\nSource: The World Bank\nIt’s important to remember the nature of tesobonos, which were government-issued debt instruments with a fixed exchange rate and were promised to be paid out in U.S. dollars. As the value of the debt exceeded the value of Mexico’s foreign reserves, investors began to worry about Mexico’s ability to repay the loans. The graph above illustrates the dramatic decline in the ratio of Mexico’s total reserves to foreign debt. As a result, investors began to offload their Mexican assets, contributing to the peso losing half of its value.\nThe government needed to allow the peso to depreciate to ease pressure on foreign reserves and make Mexican exports more competitive, which could help address the current account deficit. However, the Zedillo administration could not reassure investors that it could sustain the peso’s depreciation due to the structure of tesobonos, whose value could exceed Mexico’s foreign reserves, risking default. This loss of investor confidence further devalued the peso and raised doubts about Mexico’s ability to meet its obligations."
  },
  {
    "objectID": "projects/peso/peso.html#oil-prices-economic-uncertainty",
    "href": "projects/peso/peso.html#oil-prices-economic-uncertainty",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Oil Prices & Economic Uncertainty",
    "text": "Oil Prices & Economic Uncertainty\n\n\n\n\n\n\nSource: Statista\nOil prices have been rising dramatically since the turn of the century, as evidenced by OPEC oil prices. The only significant dip occurred during the Great Recession, but prices quickly recovered, reaching new heights in 2012, when the average annual cost of a barrel of oil exceeded $109. However, just four years later, the price plummeted to less than $41, resulting in a loss of more than half its value.\nWhat does this mean for Mexico, which has a very large oil and gas sector? The oil industry in Mexico is nationalized by the government and serves as a significant source of government revenue. It meant an unprecedented plummet that would devalue a portion of Mexico’s GDP.\n\n\n\n\n\n\nSource: Statista\n\nTrump\nPhoto by Saul Loeb in CNN"
  },
  {
    "objectID": "projects/peso/peso_doc.html",
    "href": "projects/peso/peso_doc.html",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "",
    "text": "The chart above shows the MXN peso to USD exchange rate since 1993. Highlighted areas represent periods of peso devaluation relative to the dollar. As the U.S. is Mexico’s largest trading partner, this exchange rate is crucial to Mexico’s economy and broader economic plans. The orange zones indicate global economic instability, such as the 2008 financial crisis and the 2020 COVID-19 pandemic. In contrast, the red zones highlight devaluations unique to Mexico, which are the focus of this article."
  },
  {
    "objectID": "projects/peso/peso_doc.html#assasinaitons-a-violent-mobilization",
    "href": "projects/peso/peso_doc.html#assasinaitons-a-violent-mobilization",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Assasinaitons & A Violent Mobilization",
    "text": "Assasinaitons & A Violent Mobilization\nNumerous destabilizing events occurred in 1994. I particularly appreciate the title of the El País article, “México 1994: el año que pasó todo” (“The Year Everything Happened”). For brevity, I will focus on two key political factors that stressed the exchange rate and contributed to the December crisis: high-profile political assassinations and the eruption of the Zapatista movement.\nFirst, to understand the assassinations and their impact, some context is necessary. Mexico’s dominant political party, the PRI (Institutional Revolutionary Party), had controlled the country since the 1930s, effectively creating a one-party system. However, by the 1990s, the PRI’s grip on power was weakening, culminating in the election of the first non-PRI president in 2000. \nPhoto by Infobae\nAt the time, sitting presidents selected their successors to run as the PRI’s presidential candidate. Luis Donaldo Colosio, chosen by President Salinas de Gortari, was widely expected to reform the party from within. However, on March 23, Colosio was assassinated in Tijuana, triggering a chaotic scramble to find a replacement just months before the election.\nThis process was complicated by the Mexican Constitution, which prohibits individuals holding high office within the previous six months from running for president. Despite this, Ernesto Zedillo was selected as the new PRI candidate and later oversaw the peso devaluation in December.\nThe instability deepened when, on September 28, José Francisco Ruiz Massieu, the PRI’s general secretary—a position wielding significant influence over the party and national politics—was also assassinated.\nWhile neither Colosio nor Ruiz Massieu held active government roles at the time, their positions at the helm of the PRI were crucial. These events shook confidence in a party already under pressure from increasingly competitive smaller parties.\nStable political regimes are essential for fostering predictable economic environments. For decades, the PRI had artificially maintained political stability, but by 1994, this stability was unraveling. The assassinations signaled threats to political order, unsettling markets. Although the PRI sought to reassure markets by swiftly transitioning to a new presidential candidate, this effort added pressure to an already fragile system, setting the stage for the December economic crisis.\nPhoto by Eduardo Verdugo for The AP\nSecond, it is crucial to note that NAFTA (the North American Free Trade Agreement) came into effect on January 1, 1994. This agreement brought great optimism about Mexico’s economic potential, encouraging investors to view the country as a promising destination for economic activity. This renewed attention increased demand for the peso.\nHowever, on the same day, January 1, 1994, the Zapatista movement emerged on the national stage. Composed primarily of indigenous militias from Chiapas, the movement opposed the government’s economic liberalization policies, including NAFTA, which they believed marginalized their communities and threatened their traditional way of life. This resistance raised concerns about the stability of Mexico’s economic trajectory.\nThe Zapatista uprising involved violent confrontations, with over a hundred fatalities in the initial clashes, casting doubt in investors’ minds about Mexico’s ability to sustain economic growth without significant disruption. The government faced pressure to crack down on the movement, which it did, but this heavy-handed response underscored the resistance to investor-friendly reforms.\nThis opposition to economic liberalization, coupled with violence and unrest, created uncertainty about the viability of Mexico’s economic policies. It also increased pressure on the peso peg, a cornerstone of the government’s economic strategy, contributing to the strain that ultimately led to the December crisis."
  },
  {
    "objectID": "projects/peso/peso_doc.html#the-tesobonos-and-economic-factors",
    "href": "projects/peso/peso_doc.html#the-tesobonos-and-economic-factors",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "The Tesobonos and Economic Factors",
    "text": "The Tesobonos and Economic Factors\nTo understand the Peso Crisis, one key factor is the role of tesobonos. These were short-term bonds with a fixed exchange rate, payable in USD. They offered investors the dual benefit of currency stability and higher interest rates than U.S. bonds. By linking returns to USD, the Mexican government aimed to attract foreign investors and inspire confidence amid political instability. At the same time, this strategy aligned with Mexico’s economic goals under NAFTA and its push for more open trade policies.\nWith the peso pegged to the U.S. dollar, it became overvalued over time, making trade more expensive and requiring increasingly large amounts of foreign reserves to maintain the peg. The loss of the peg, or the solution that was eventually used—allowing the peso to float freely against the dollar—was necessary to ease the pressure on imports and the central bank. However, since it was an election year, and with growing political competition, the PRI (Institutional Revolutionary Party) wanted to avoid changing the currency until after the elections. Once Ernesto Zedillo took office, he faced mounting pressure from the peso’s overvaluation and finally allowed the peso to float. This decision, however, led to a sharp depreciation of the peso, as investors panicked and sold off their holdings.\n\n\n\n\n\n\nSource: The World Bank\nIt’s important to remember the nature of tesobonos, which were government-issued debt instruments with a fixed exchange rate and were promised to be paid out in U.S. dollars. As the value of the debt exceeded the value of Mexico’s foreign reserves, investors began to worry about Mexico’s ability to repay the loans. The graph above illustrates the dramatic decline in the ratio of Mexico’s total reserves to foreign debt. As a result, investors began to offload their Mexican assets, contributing to the peso losing half of its value.\nThe government needed to allow the peso to depreciate to ease pressure on foreign reserves and make Mexican exports more competitive, which could help address the current account deficit. However, the Zedillo administration could not reassure investors that it could sustain the peso’s depreciation due to the structure of tesobonos, whose value could exceed Mexico’s foreign reserves, risking default. This loss of investor confidence further devalued the peso and raised doubts about Mexico’s ability to meet its obligations."
  },
  {
    "objectID": "projects/peso/peso_doc.html#oil-prices-economic-uncertainty",
    "href": "projects/peso/peso_doc.html#oil-prices-economic-uncertainty",
    "title": "The Mexican Peso: History & Opportunities",
    "section": "Oil Prices & Economic Uncertainty",
    "text": "Oil Prices & Economic Uncertainty\n\n\n\n\n\n\nSource: Statista\nOil prices have been rising dramatically since the turn of the century, as evidenced by OPEC oil prices. The only significant dip occurred during the Great Recession, but prices quickly recovered, reaching new heights in 2012, when the average annual cost of a barrel of oil exceeded $109. However, just four years later, the price plummeted to less than $41, resulting in a loss of more than half its value.\nWhat does this mean for Mexico, which has a very large oil and gas sector? The oil industry in Mexico is nationalized by the government and serves as a significant source of government revenue. It meant an unprecedented plummet that would devalue a portion of Mexico’s GDP.\n\n\n\n\n\n\nSource: Statista\nIn 2014, the oil and gas sector accounted for approximately 5% of GDP, but by 2016, it had fallen to just 2%, primarily due to a dramatic decline in oil prices. This sharp drop significantly impacted federal government revenue, as oil-related income made up 30% of the federal budget in 2016. Such a decline created ripple effects across the economy, raising concerns among investors about the stability and potential risks of investing in the Mexican economy.\n\n\n\n\n\n\nFinally, as seen in GDP during this period, the Mexican economy was in decline, which can help explain the peso’s depreciation during this time. The decline of the Mexican economy reflects poorly on investor confidence and could result in fewer investment opportunities, leading to reduced demand for Mexican financial assets. This contributed to the steady depreciation of the peso against the USD that we observed.\n\nTrump\nPhoto by Saul Loeb in CNN\nEntering 2015, a new wave of political tension emerged as Donald Trump’s rhetoric toward Mexico gained traction in the United States. This hostility, coupled with the progressive economic decline leading up to the U.S. elections and Trump’s inauguration, heightened investor concerns about the future of Mexican assets. Trump’s vocal criticism of NAFTA and calls for its renegotiation added further uncertainty. Until the renegotiation was completed, markets remained unsure of Mexico’s economic prospects. Overall, the instability during the early Trump administration exacerbated these challenges, contributing to the depreciation of the peso and increasing economic uncertainty."
  }
]