---
title: "Interactive Data Vizualization (select to highlight)"
subtitle: "Dataset is About Elite Schools"
date: "Sep 10, 2024"
author: "Kevin Valdivia"
format: html
toc: false # Table of contents
execute: 
  warning: false
  message: false
---
***Heavily influenced by Professor Jo Hardin at Pomona College***


## Loading relevant libraries
```{r}
library(tidyverse)
library(plotly)
library(crosstalk) # For SharedData
```


## Importation of the data

```{r}
college_admissions <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-09-10/college_admissions.csv')
```

::: {.callout-tip title="Disclaimer"}
The documentation of the dataset was highly complicated and technical and hence I don't understand how to interpret the datset. Instead I used the graph to learn more about how to make a interactive graph. Specifically how to select a line on a graph. There are many institutions on the graph so it is not the best example, but the code works.
:::

## Setting up interactive graph

::: {.callout-note title="Plotly & Crosstalk::SharedData"}
The SharedData function hass to be used in this way for the plotly to work.
:::

```{r}
# Some Data prep so that public and private categroization looks good on the graph
college_admissions <- college_admissions |>
  mutate(public_name = ifelse(public == TRUE, "Public Uni", "Private Uni"))

# Indispensable setup for plotly
data_w_crosstalk <- crosstalk::SharedData$new(college_admissions, ~name)
```


## Interactive graph that can highlight a line when selected

First we need to make the ggplot look how we want it to look.
```{r}
plot_setup <- data_w_crosstalk |> 
  ggplot(aes(x = par_income_bin, y = attend, color = public_name,
             text = paste0("School: ", name))) +
  geom_point() +
  geom_line() +
  facet_grid(~ public_name) +
    scale_color_manual(values = c("Public Uni" = "blue", "Private Uni" = "red")) +  # Custom colors
  guides(color = "none") + # How to not make the color and public/private appear
  labs(x = "Parental Income Bin",
       y = "Something about % Attendence",
       title = "Plot Comparing Elite Schools and Student Income Status")
```

# Plotly Time
Now we can use the plotly to make the ggplot saved interactive (remember crosstalk should have been used before making the ggplot)

```{r}
plotly_setup <- plotly::ggplotly(plot_setup, tooltip = "text")
plotly::highlight(plotly_setup, on = "plotly_click")
```

